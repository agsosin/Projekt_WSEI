<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/25/2022 8:59:08 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-DBV1COE"
  DTS:CreatorName="DESKTOP-DBV1COE\agnie"
  DTS:DTSID="{ECE39DCA-E9B4-43B4-A45C-7C7861668272}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1045"
  DTS:ObjectName="Execute in order"
  DTS:PackageType="5"
  DTS:VersionBuild="159"
  DTS:VersionGUID="{704BB675-CC85-4A82-AFA4-4D3E122F2B9C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Countries]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2263EAEE-60CB-4A8A-AC84-5C9CA0D6A143}"
      DTS:ObjectName="Countries">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FlatFileLocation]+"\\countries.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_Plaskie\countries.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{162C9B23-2461-4352-8C98-17A9E1830FAD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country name"
              DTS:DTSID="{990558E6-8501-49CC-9C61-F3A49917224E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country-code"
              DTS:DTSID="{271B4150-A880-4EBD-9683-0C34A3E3EE2F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{B68D810F-5646-43EF-A957-D906BC9F26D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="sub-region"
              DTS:DTSID="{E250E5B0-AC55-43C0-BE8C-855A44A4AB07}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{125622E8-68EB-4691-9DC4-64A74FC959A7}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_plaskie\countries.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" "
              DTS:DTSID="{478C65AC-C642-429B-B5E4-64DFC57CAD29}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country name"
              DTS:DTSID="{FCAC8C2F-3DA4-42E0-A3A0-B694F6143AEE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country-code"
              DTS:DTSID="{490909C4-FDD6-4E3B-91D3-016587E556B5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{177C2898-20CD-4FE7-96E1-67293152A2C7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="sub-region"
              DTS:DTSID="{A17EEAAA-9CF9-4FCB-A438-F8776556D26D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Influenza]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9EE1E82B-1983-4237-81AF-1F42934C14CA}"
      DTS:ObjectName="Influenza">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ManualDownloadLocation] + "\\influenza_weekly.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pobrane\influenza_weekly.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="REPORT_ID"
              DTS:DTSID="{5B6FBCBF-B000-4575-BABF-C66630DDBEF4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Country"
              DTS:DTSID="{CF269D03-802B-4D4B-AECA-4DC3905AB3AD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="WHOREGION"
              DTS:DTSID="{F9223A20-F4D3-4F10-B262-18F00D54B03C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FLUREGION"
              DTS:DTSID="{96C4BB30-B7C6-4287-8658-6687AF92E24F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Year"
              DTS:DTSID="{BE5755A0-79CC-486D-B851-9098ADBF7F90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Week"
              DTS:DTSID="{ACF0C02D-0E5E-434D-88EA-AEE7F431C2D6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SDATE"
              DTS:DTSID="{CA8633BC-1FA3-463D-ACD7-6CD65C7954D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EDATE"
              DTS:DTSID="{1B0C15D6-6EE3-4FB9-A1F3-BB7F1D33FE61}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SPEC_RECEIVED_NB"
              DTS:DTSID="{359C4AA2-1751-4917-81A9-0E4249679ABD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SPEC_PROCESSED_NB"
              DTS:DTSID="{AD480FE7-70C0-4EED-99C1-C3A9D3DD38D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AH1"
              DTS:DTSID="{50E03B2F-548A-4702-ADDA-9613B2DA06E2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AH1N12009"
              DTS:DTSID="{80122941-A73B-476D-AAF6-B1B2436BC61B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AH3"
              DTS:DTSID="{335E0C02-4228-4CFE-9D7D-7FEA42F73B69}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AH5"
              DTS:DTSID="{7AB72074-5DEA-4714-BB13-A5AA479B9076}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ANOTSUBTYPED"
              DTS:DTSID="{AAAE19C5-D9FC-4D5B-97BC-BB1EF39B825B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="INF_A"
              DTS:DTSID="{C032BD76-0EBB-41BA-8D6A-A796ACB63AC5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="BYAMAGATA"
              DTS:DTSID="{AAB2BD1B-BBF6-4CCE-B11C-EA70B11C0DE4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="BVICTORIA"
              DTS:DTSID="{8E287D8A-F378-4327-A2F2-036DA2534937}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="BNOTDETERMINED"
              DTS:DTSID="{9D3563E2-CA48-4596-A299-576A9B12753C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="INF_B"
              DTS:DTSID="{8A71FC31-B76C-4792-8C89-8B47CFDCCAEF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ALL_INF"
              DTS:DTSID="{B81B1043-0A5F-4712-818B-8AA3A1A32C8A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ALL_INF2"
              DTS:DTSID="{225BE030-AAA1-42F7-947F-63D94FD61BD5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TITLE"
              DTS:DTSID="{FB11D401-1EE9-4AAB-8B38-A75BAB4A5000}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Influenza_final]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{103F2D98-7599-4CB1-A2E5-253E8E4FA117}"
      DTS:ObjectName="Influenza_final">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FlatFileLocation]+"\\influenza.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1250"
          DTS:ConnectionString="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_Plaskie\influenza.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country-code"
              DTS:DTSID="{AD64C2B4-56D3-4949-A7D3-052EA1AC4754}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SDATE"
              DTS:DTSID="{A39857DD-0C02-4D8E-8B6F-14CF7B8A36D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EDATE"
              DTS:DTSID="{B0F3818A-739C-40FF-B9FD-4709A469721D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SPEC_RECEIVED_NB"
              DTS:DTSID="{1114A49D-201C-4E8A-B3E6-5B2085FDD353}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ALL_INF"
              DTS:DTSID="{A398756E-5E1F-446F-81F3-E6744DBB0303}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TITLE"
              DTS:DTSID="{D3140987-E04B-409E-BC99-906B49E043C3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Country"
              DTS:DTSID="{CEEA2F8E-4C30-4113-9223-AB2F221C40EC}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[temp]"
      DTS:CreationName="FILE"
      DTS:DTSID="{443A37CF-3EA6-4BA3-8530-2A2D67DCBDE6}"
      DTS:ObjectName="temp">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_plaskie\temp" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Truncate]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{AFBC8582-2A3E-4C9B-BC7A-9B869E700246}"
      DTS:ObjectName="Truncate">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-DBV1COE\SQLEXPRESS;Integrated Security=SSPI;Connect Timeout=30;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0969AA1-EE71-4A8D-A818-BBC885270DC3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="COVID">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0B24BAA-5FC2-4967-8402-F5F0008BAD96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CovidData">
      <DTS:VariableValue
        DTS:DataType="8">owid-covid-data.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19470701-6FAA-49C2-BB89-2F894CB5B1F6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CzyPobrane">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0502BEE-744F-4D76-803E-D77054C2A2AB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FlatFileLocation]+&quot;\\temp&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DownloadLocation">
      <DTS:VariableValue
        DTS:DataType="8">D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_Plaskie\temp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61385EEB-630B-4B0B-95FB-F951E548CE0B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FiPath]+ @[$Project::FlatFiles]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FlatFileLocation">
      <DTS:VariableValue
        DTS:DataType="8">D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pliki_Plaskie</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFD8CD09-1BD3-459B-8094-1FB8B834ED24}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FiPath]+&quot;\\Pobrane&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ManualDownloadLocation">
      <DTS:VariableValue
        DTS:DataType="8">D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pobrane</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\First use"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{41CB9AA3-B378-45AD-BCE3-55C1B965DFA2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="First use">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{882F7F6C-58B8-4217-BB84-4E94B47541AE}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="PathPobrane">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\First use\Change death reasons"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{CD3E04BD-10BE-4966-9D1B-86EC10AC4806}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Change death reasons"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change death reasons.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Change HDI"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{9CBF3FFF-C453-41EA-AFC5-DE3B132649E8}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Change HDI"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change HDI.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Change indicators"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{7C760166-FBEE-4832-98A9-A4B1E2ED5F0B}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Change indicators"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change indicators.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Change influenza"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{F54C7182-DB63-4973-A246-5E2CB2998EF5}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Change influenza"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change influenza.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Create table with countries and regions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{95324EE5-CD88-4596-91EE-F91BB0E60C1C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create table with countries and regions">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\First use\Create table with countries and regions\Flat File Destination"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1045"
                  name="Flat File Destination"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\First use\Create table with countries and regions\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].Columns[country-code]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="country-code"
                          externalMetadataColumnId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country-code]"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country-code]" />
                        <inputColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].Columns[region]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="region"
                          externalMetadataColumnId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[region]"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[region]" />
                        <inputColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].Columns[sub-region]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="sub-region"
                          externalMetadataColumnId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[sub-region]"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[sub-region]" />
                        <inputColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].Columns[country name]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="country name"
                          externalMetadataColumnId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country name]"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country name]" />
                        <inputColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].Columns[ID]"
                          cachedDataType="i4"
                          cachedName="ID"
                          externalMetadataColumnId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ ]"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[ID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country-code]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="country-code" />
                        <externalMetadataColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[region]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="region" />
                        <externalMetadataColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[sub-region]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="sub-region" />
                        <externalMetadataColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country name]"
                          codePage="1250"
                          dataType="str"
                          length="255"
                          name="country name" />
                        <externalMetadataColumn
                          refId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ ]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name=" " />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\First use\Create table with countries and regions\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don"t need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don"t need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        int i = 0;


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Afghanistan";
        OutputaBuffer.countrycode = "AFG";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Albania";
        OutputaBuffer.countrycode = "ALB";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";
        
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Algeria";
        OutputaBuffer.countrycode = "DZA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Angola";
        OutputaBuffer.countrycode = "AGO";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Argentina";
        OutputaBuffer.countrycode = "ARG";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";
        
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Armenia";
        OutputaBuffer.countrycode = "ARM";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Australia";
        OutputaBuffer.countrycode = "AUS";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Australia and New Zealand";
        
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Austria";
        OutputaBuffer.countrycode = "AUT";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Azerbaijan";
        OutputaBuffer.countrycode = "AZE";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bahrain";
        OutputaBuffer.countrycode = "BHR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bangladesh";
        OutputaBuffer.countrycode = "BGD";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";
 
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Belarus";
        OutputaBuffer.countrycode = "BLR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Belgium";
        OutputaBuffer.countrycode = "BEL";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bhutan";
        OutputaBuffer.countrycode = "BTN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bosnia and Herzegovina";
        OutputaBuffer.countrycode = "BIH";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Brazil";
        OutputaBuffer.countrycode = "BRA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bulgaria";
        OutputaBuffer.countrycode = "BGR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Burkina Faso";
        OutputaBuffer.countrycode = "BFA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";
  
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cambodia";
        OutputaBuffer.countrycode = "KHM";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cameroon";
        OutputaBuffer.countrycode = "CMR";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Central African Republic";
        OutputaBuffer.countrycode = "CAF";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Chile";
        OutputaBuffer.countrycode = "CHL";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "China";
        OutputaBuffer.countrycode = "CHN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Colombia";
        OutputaBuffer.countrycode = "COL";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Congo";
        OutputaBuffer.countrycode = "COG";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Côte d'Ivoire";
        OutputaBuffer.countrycode = "CIV";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Croatia";
        OutputaBuffer.countrycode = "HRV";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Czechia";
        OutputaBuffer.countrycode = "CZE";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Democratic Republic of the Congo";
        OutputaBuffer.countrycode = "COD";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";
 
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Denmark";
        OutputaBuffer.countrycode = "DNK";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Dominican Republic";
        OutputaBuffer.countrycode = "DOM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";
  
        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Ecuador";
        OutputaBuffer.countrycode = "ECU";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Egypt";
        OutputaBuffer.countrycode = "EGY";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "El Salvador";
        OutputaBuffer.countrycode = "SLV";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Estonia";
        OutputaBuffer.countrycode = "EST";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Ethiopia";
        OutputaBuffer.countrycode = "ETH";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Fiji";
        OutputaBuffer.countrycode = "FJI";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Melanesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Finland";
        OutputaBuffer.countrycode = "FIN";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "France";
        OutputaBuffer.countrycode = "FRA";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "French Guiana";
        OutputaBuffer.countrycode = "GUF";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Georgia";
        OutputaBuffer.countrycode = "GEO";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Germany";
        OutputaBuffer.countrycode = "DEU";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Ghana";
        OutputaBuffer.countrycode = "GHA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Greece";
        OutputaBuffer.countrycode = "GRC";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guadeloupe";
        OutputaBuffer.countrycode = "GLP";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guatemala";
        OutputaBuffer.countrycode = "GTM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Honduras";
        OutputaBuffer.countrycode = "HND";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Hungary";
        OutputaBuffer.countrycode = "HUN";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Iceland";
        OutputaBuffer.countrycode = "ISL";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "India";
        OutputaBuffer.countrycode = "IND";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Indonesia";
        OutputaBuffer.countrycode = "IDN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Iran (Islamic Republic of)";
        OutputaBuffer.countrycode = "IRN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Iraq";
        OutputaBuffer.countrycode = "IRQ";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Ireland";
        OutputaBuffer.countrycode = "IRL";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Israel";
        OutputaBuffer.countrycode = "ISR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Italy";
        OutputaBuffer.countrycode = "ITA";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Jamaica";
        OutputaBuffer.countrycode = "JAM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Japan";
        OutputaBuffer.countrycode = "JPN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Jordan";
        OutputaBuffer.countrycode = "JOR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Kazakhstan";
        OutputaBuffer.countrycode = "KAZ";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Central Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Kenya";
        OutputaBuffer.countrycode = "KEN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Kyrgyzstan";
        OutputaBuffer.countrycode = "KGZ";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Central Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Lao People's Democratic Republic";
        OutputaBuffer.countrycode = "LAO";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Latvia";
        OutputaBuffer.countrycode = "LVA";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Lithuania";
        OutputaBuffer.countrycode = "LTU";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Luxembourg";
        OutputaBuffer.countrycode = "LUX";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Madagascar";
        OutputaBuffer.countrycode = "MDG";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Malaysia";
        OutputaBuffer.countrycode = "MYS";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Maldives";
        OutputaBuffer.countrycode = "MDV";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mali";
        OutputaBuffer.countrycode = "MLI";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Malta";
        OutputaBuffer.countrycode = "MLT";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mauritius";
        OutputaBuffer.countrycode = "MUS";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mexico";
        OutputaBuffer.countrycode = "MEX";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mongolia";
        OutputaBuffer.countrycode = "MNG";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Morocco";
        OutputaBuffer.countrycode = "MAR";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mozambique";
        OutputaBuffer.countrycode = "MOZ";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Myanmar";
        OutputaBuffer.countrycode = "MMR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Nepal";
        OutputaBuffer.countrycode = "NPL";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Netherlands";
        OutputaBuffer.countrycode = "NLD";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "New Caledonia";
        OutputaBuffer.countrycode = "NCL";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Melanesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "New Zealand";
        OutputaBuffer.countrycode = "NZL";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Australia and New Zealand";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Nigeria";
        OutputaBuffer.countrycode = "NGA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "North Macedonia";
        OutputaBuffer.countrycode = "MKD";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Norway";
        OutputaBuffer.countrycode = "NOR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Oman";
        OutputaBuffer.countrycode = "OMN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Pakistan";
        OutputaBuffer.countrycode = "PAK";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Panama";
        OutputaBuffer.countrycode = "PAN";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Papua New Guinea";
        OutputaBuffer.countrycode = "PNG";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Melanesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Paraguay";
        OutputaBuffer.countrycode = "PRY";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Peru";
        OutputaBuffer.countrycode = "PER";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Philippines";
        OutputaBuffer.countrycode = "PHL";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Poland";
        OutputaBuffer.countrycode = "POL";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Portugal";
        OutputaBuffer.countrycode = "PRT";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Qatar";
        OutputaBuffer.countrycode = "QAT";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Republic of Moldova";
        OutputaBuffer.countrycode = "MDA";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Romania";
        OutputaBuffer.countrycode = "ROU";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Russian Federation";
        OutputaBuffer.countrycode = "RUS";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Rwanda";
        OutputaBuffer.countrycode = "RWA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Senegal";
        OutputaBuffer.countrycode = "SEN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Serbia";
        OutputaBuffer.countrycode = "SRB";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sierra Leone";
        OutputaBuffer.countrycode = "SLE";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Singapore";
        OutputaBuffer.countrycode = "SGP";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Slovakia";
        OutputaBuffer.countrycode = "SVK";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Slovenia";
        OutputaBuffer.countrycode = "SVN";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "South Africa";
        OutputaBuffer.countrycode = "ZAF";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Spain";
        OutputaBuffer.countrycode = "ESP";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sri Lanka";
        OutputaBuffer.countrycode = "LKA";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Southern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sudan";
        OutputaBuffer.countrycode = "SDN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sweden";
        OutputaBuffer.countrycode = "SWE";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Switzerland";
        OutputaBuffer.countrycode = "CHE";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Syrian Arab Republic";
        OutputaBuffer.countrycode = "SYR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Thailand";
        OutputaBuffer.countrycode = "THA";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Togo";
        OutputaBuffer.countrycode = "TGO";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tunisia";
        OutputaBuffer.countrycode = "TUN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Turkey";
        OutputaBuffer.countrycode = "TUR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Uganda";
        OutputaBuffer.countrycode = "UGA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Ukraine";
        OutputaBuffer.countrycode = "UKR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United Kingdom of Great Britain and Northern Ireland";
        OutputaBuffer.countrycode = "GBR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United Republic of Tanzania";
        OutputaBuffer.countrycode = "TZA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United States of America";
        OutputaBuffer.countrycode = "USA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Northern America";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Uruguay";
        OutputaBuffer.countrycode = "URY";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Uzbekistan";
        OutputaBuffer.countrycode = "UZB";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Central Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Venezuela (Bolivarian Republic of)";
        OutputaBuffer.countrycode = "VEN";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Viet Nam";
        OutputaBuffer.countrycode = "VNM";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Zambia";
        OutputaBuffer.countrycode = "ZMB";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Andorra";
        OutputaBuffer.countrycode = "AND";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Antigua and Barbuda";
        OutputaBuffer.countrycode = "ATG";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bahamas";
        OutputaBuffer.countrycode = "BHS";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Barbados";
        OutputaBuffer.countrycode = "BRB";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Belize";
        OutputaBuffer.countrycode = "BLZ";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Benin";
        OutputaBuffer.countrycode = "BEN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bolivia (Plurinational State of)";
        OutputaBuffer.countrycode = "BOL";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Botswana";
        OutputaBuffer.countrycode = "BWA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Brunei Darussalam";
        OutputaBuffer.countrycode = "BRN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Burundi";
        OutputaBuffer.countrycode = "BDI";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cabo Verde";
        OutputaBuffer.countrycode = "CPV";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Canada";
        OutputaBuffer.countrycode = "CAN";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Northern America";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Chad";
        OutputaBuffer.countrycode = "TCD";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Comoros";
        OutputaBuffer.countrycode = "COM";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Congo (Democratic Republic of the)";
        OutputaBuffer.countrycode = "COD";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Costa Rica";
        OutputaBuffer.countrycode = "CRI";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cuba";
        OutputaBuffer.countrycode = "CUB";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cyprus";
        OutputaBuffer.countrycode = "CYP";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Djibouti";
        OutputaBuffer.countrycode = "DJI";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Dominica";
        OutputaBuffer.countrycode = "DMA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Equatorial Guinea";
        OutputaBuffer.countrycode = "GNQ";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Eritrea";
        OutputaBuffer.countrycode = "ERI";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Eswatini (Kingdom of)";
        OutputaBuffer.countrycode = "SWZ";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Gabon";
        OutputaBuffer.countrycode = "GAB";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Gambia";
        OutputaBuffer.countrycode = "GMB";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Grenada";
        OutputaBuffer.countrycode = "GRD";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guinea";
        OutputaBuffer.countrycode = "GIN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guinea-Bissau";
        OutputaBuffer.countrycode = "GNB";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guyana";
        OutputaBuffer.countrycode = "GUY";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Haiti";
        OutputaBuffer.countrycode = "HTI";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Hong Kong, China(SAR)";
        OutputaBuffer.countrycode = "HKG";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Kiribati";
        OutputaBuffer.countrycode = "KIR";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Micronesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Korea (Republic of)";
        OutputaBuffer.countrycode = "KOR";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Kuwait";
        OutputaBuffer.countrycode = "KWT";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Lebanon";
        OutputaBuffer.countrycode = "LBN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Lesotho";
        OutputaBuffer.countrycode = "LSO";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Liberia";
        OutputaBuffer.countrycode = "LBR";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Libya";
        OutputaBuffer.countrycode = "LBY";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Northern Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Liechtenstein";
        OutputaBuffer.countrycode = "LIE";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Malawi";
        OutputaBuffer.countrycode = "MWI";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Marshall Islands";
        OutputaBuffer.countrycode = "MHL";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Micronesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Mauritania";
        OutputaBuffer.countrycode = "MRT";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Micronesia (Federated States of)";
        OutputaBuffer.countrycode = "FSM";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Micronesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Moldova (Republic of)";
        OutputaBuffer.countrycode = "MDA";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Eastern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Montenegro";
        OutputaBuffer.countrycode = "MNE";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Namibia";
        OutputaBuffer.countrycode = "NAM";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Nicaragua";
        OutputaBuffer.countrycode = "NIC";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Niger";
        OutputaBuffer.countrycode = "NER";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Palau";
        OutputaBuffer.countrycode = "PLW";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Micronesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Palestine, State of";
        OutputaBuffer.countrycode = "PSE";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saint Kitts and Nevis";
        OutputaBuffer.countrycode = "KNA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saint Lucia";
        OutputaBuffer.countrycode = "LCA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saint Vincent and the Grenadines";
        OutputaBuffer.countrycode = "VCT";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Samoa";
        OutputaBuffer.countrycode = "WSM";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sao Tome and Principe";
        OutputaBuffer.countrycode = "STP";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saudi Arabia";
        OutputaBuffer.countrycode = "SAU";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Seychelles";
        OutputaBuffer.countrycode = "SYC";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Solomon Islands";
        OutputaBuffer.countrycode = "SLB";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Melanesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "South Sudan";
        OutputaBuffer.countrycode = "SSD";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Suriname";
        OutputaBuffer.countrycode = "SUR";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tajikistan";
        OutputaBuffer.countrycode = "TJK";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Central Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tanzania (United Republic of)";
        OutputaBuffer.countrycode = "TZA";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Timor-Leste";
        OutputaBuffer.countrycode = "TLS";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tonga";
        OutputaBuffer.countrycode = "TON";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Trinidad and Tobago";
        OutputaBuffer.countrycode = "TTO";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Turkmenistan";
        OutputaBuffer.countrycode = "TKM";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Central Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United Arab Emirates";
        OutputaBuffer.countrycode = "ARE";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United Kingdom";
        OutputaBuffer.countrycode = "GBR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "United States";
        OutputaBuffer.countrycode = "USA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Northern America";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Vanuatu";
        OutputaBuffer.countrycode = "VUT";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Melanesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Yemen";
        OutputaBuffer.countrycode = "YEM";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "Western Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saint Helena";
        OutputaBuffer.countrycode = "SHN";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Aruba";
        OutputaBuffer.countrycode = "ABW";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Anguilla";
        OutputaBuffer.countrycode = "AIA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bonaire, Saint Eustatius and Saba";
        OutputaBuffer.countrycode = "BES";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Bermuda";
        OutputaBuffer.countrycode = "BMU";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cook Islands";
        OutputaBuffer.countrycode = "COK";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Curacao";
        OutputaBuffer.countrycode = "CUW";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Cayman Islands";
        OutputaBuffer.countrycode = "CYM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Falkland Islands";
        OutputaBuffer.countrycode = "FLK";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Faroe Islands";
        OutputaBuffer.countrycode = "FRO";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Guernsey";
        OutputaBuffer.countrycode = "GGY";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Greenland";
        OutputaBuffer.countrycode = "GRL";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Northern America";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Isle of Man";
        OutputaBuffer.countrycode = "IMN";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Northern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Jersey";
        OutputaBuffer.countrycode = "JEY";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Macao";
        OutputaBuffer.countrycode = "MAC";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Monaco";
        OutputaBuffer.countrycode = "MCO";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Montserrat";
        OutputaBuffer.countrycode = "MSR";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";



        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Niue";
        OutputaBuffer.countrycode = "NIU";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Pitcairn";
        OutputaBuffer.countrycode = "PCN";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Puerto Rico";
        OutputaBuffer.countrycode = "PRI";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "French Polynesia";
        OutputaBuffer.countrycode = "PYF";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "San Marino";
        OutputaBuffer.countrycode = "SMR";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Somalia";
        OutputaBuffer.countrycode = "SOM";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Saint Pierre and Miquelon";
        OutputaBuffer.countrycode = "SPM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Northern America";


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Sint Maarten";
        OutputaBuffer.countrycode = "SXM";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Turks and Caicos Islands";
        OutputaBuffer.countrycode = "TCA";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tokelau";
        OutputaBuffer.countrycode = "TKL";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Tuvalu";
        OutputaBuffer.countrycode = "TUV";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";


        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Taiwan";
        OutputaBuffer.countrycode = "TWN";
        OutputaBuffer.region = "Asia";
        OutputaBuffer.subregion = "South-eastern Asia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Vatican";
        OutputaBuffer.countrycode = "VAT";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Southern Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "British Virgin Islands";
        OutputaBuffer.countrycode = "VGB";
        OutputaBuffer.region = "Americas";
        OutputaBuffer.subregion = "Latin America and the Caribbean";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Wallis and Futuna";
        OutputaBuffer.countrycode = "WLF";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Gibraltar";
        OutputaBuffer.countrycode = "GIB";
        OutputaBuffer.region = "Europe";
        OutputaBuffer.subregion = "Western Europe";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Nauru";
        OutputaBuffer.countrycode = "NRU";
        OutputaBuffer.region = "Oceania";
        OutputaBuffer.subregion = "Polynesia";

        OutputaBuffer.AddRow();
        OutputaBuffer.ID = i;
        i += 1;
        OutputaBuffer.countryname = "Zimbabwe";
        OutputaBuffer.countrycode = "ZWE";
        OutputaBuffer.region = "Africa";
        OutputaBuffer.subregion = "Sub-Saharan Africa";

        OutputaBuffer.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_1c10aaf58ff34afc85ce34beac385225.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{03855d5a-a84d-452d-b787-0b7e4f27e7f7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1c10aaf58ff34afc85ce34beac385225</RootNamespace>
    <AssemblyName>SC_1c10aaf58ff34afc85ce34beac385225</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_1c10aaf58ff34afc85ce34beac385225" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputaBuffer: ScriptBuffer

{
    public OutputaBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String countryname
    {
        set
        {
            this[1] = value;
        }
    }
    public bool countryname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String countrycode
    {
        set
        {
            this[2] = value;
        }
    }
    public bool countrycode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String region
    {
        set
        {
            this[3] = value;
        }
    }
    public bool region_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subregion
    {
        set
        {
            this[4] = value;
        }
    }
    public bool subregion_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c10aaf58ff34afc85ce34beac385225.Properties.Settings.get_Default():SC_1c10aaf58ff34afc85ce34beac385225.Properties.Sett" +
    "ings")]

namespace SC_1c10aaf58ff34afc85ce34beac385225.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputaBuffer OutputaBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputaBuffer)
        {
            OutputaBuffer.SetEndOfRowset();
            OutputaBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outputa"))
            {
                OutputaBuffer = new OutputaBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_1c10aaf58ff34afc85ce34beac385225</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_1c10aaf58ff34afc85ce34beac385225</msb:DisplayName>
    <msb:ProjectId>{A5C0CB0C-A4C7-496C-9DA8-19A9E7E3FBDD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_1c10aaf58ff34afc85ce34beac385225.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1c10aaf58ff34afc85ce34beac385225")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1c10aaf58ff34afc85ce34beac385225")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c10aaf58ff34afc85ce34beac385225.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c10aaf58ff34afc85ce34beac385225.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c10aaf58ff34afc85ce34beac385225.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1c10aaf58ff34afc85ce34beac385225.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1c10aaf58ff34afc85ce34beac385225.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_1c10aaf58ff34afc85ce34beac385225.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAIYIawOBAAcA8nIAAAAAhgh0ABAACAD8cgAAAACGCFQDgQAJABNzAAAAAIYI2AMQAAoAHXMA
AAAAhgiCA4EACwA0cwAAAACGCOMDEAAMAD5zAAAAAIYIlAOBAA0AVXMAAAAAhgCNBgYADgBdcwAA
AACGAPoFBgAOAGVzAAAAAIYA/QUvAA4AbXMAAAAAhhipBAYADgCNcwAAAADGAdEFBgAOAI9zAAAA
AIEAUAAGAA4ArHMAAAAAxgCBBoYADgCNcwAAAADGAd8FBgASAAF0AAAAAIYYqQSSABIAEHQAAAAA
hhipBJIAEwAfdAAAAACDGKkEBgAUACd0AAAAAJMIlQSYABQAU3QAAAAAkwjeAJ0AFABadAAAAACT
COoAogAUAGJ0AAAAAJYICQaoABUAaXQAAAAAhhipBAYAFQBxdAAAAACRGK8ErQAVAAAAAQCOBAAA
AgCPBQAAAwBhBAAAAQDoAgAAAQDoAgAAAQDoAgAAAQDoAgAAAQDoAgAAAQDoAgAAAQDoAgAAAQDo
AgAAAQDoAgAAAQDoAgAAAQDXBQAAAgC2BAAAAwDJBQAABABhBAAAAQA5BgAAAQA5BgAAAQDoAgkA
qQQBABEAqQQGABkAqQQKACkAqQQQADEAqQQQADkAqQQQAEEAqQQQAEkAqQQQAFEAqQQQAFkAqQQQ
AGEAqQQQAGkAqQQGAJkAqQQGALkAqQQVAMkAqQQGAIkA0QIGAIkA3AIGAHEAqQQfAHEAsQMpAHEA
qQMBANkAqQQQAHEAjQYGAHEA+gUGAHEA/QUvAIkAqQQGAIkAOwAzAIkAowU6AJEAqQQGAOEAlgBA
AOEAlAZHAKEAqQRMAMEAqQQGAC4ACwDMAC4AEwDVAC4AGwD0AC4AIwD9AC4AKwAmAS4AMwAmAS4A
OwAmAS4AQwD9AC4ASwAsAS4AUwAmAS4AWwBDAUMAYwCNAeMAawCNAQEBewCNAWkBcwD0AIkBcwD0
ABsAAwABAAcACwAIAA0AAABEALEAAABKA7UAAACsALkAAABvA7UAAAB4ALkAAABYA7UAAADqA7kA
AACbA7UAAADnA7kAAACYA7UAAACZBL0AAAD+AMIAAAANBscAAQAGAAMAAQAHAAUAAQAIAAcAAQAJ
AAkAAQAKAAsAAQALAA0AAQAMAA8AAQANABEAAQAOABMAAQAPABUAAgAbABcAAgAcABkAAQAdABkA
AgAeABsABIAAAAEAAAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAFMARwAAAAAADwAAAAAAAAAA
AAAAXABDBgAAAAAPAAAAAAAAAAAAAABcAGAGAAAAAAQAAAAAAAAAAAAAAFMAugMAAAAAAAAAAAEA
AAAEBQAAAAAAAABJbnQzMgBTQ18xYzEwYWFmNThmZjM0YWZjODVjZTM0YmVhYzM4NTIyNQA8TW9k
dWxlPgBzZXRfSUQAR2V0T3V0cHV0SUQAbXNjb3JsaWIATWFya091dHB1dHNGaW5pc2hlZABkZWZh
dWx0SW5zdGFuY2UAc2V0X2NvdW50cnljb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAHNldF9jb3VudHJ5bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBU
eXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNDXzFjMTBhYWY1OGZmMzRhZmM4NWNlMzRiZWFjMzg1MjI1LmRsbABzZXRfSURf
SXNOdWxsAHNldF9jb3VudHJ5Y29kZV9Jc051bGwAc2V0X2NvdW50cnluYW1lX0lzTnVsbABzZXRf
cmVnaW9uX0lzTnVsbABzZXRfc3VicmVnaW9uX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAHNldF9yZWdpb24Ac2V0X3N1YnJlZ2lvbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFw
AE91dHB1dGFCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzFjMTBhYWY1OGZmMzRh
ZmM4NWNlMzRiZWFjMzg1MjI1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ18xYzEwYWFmNThmZjM0YWZjODVjZTM0YmVhYzM4NTIyNS5Qcm9wZXJ0aWVzAFZh
cmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAQ29u
bmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAT2JqZWN0
AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEFkZFJvdwBnZXRfQXNzZW1ibHkAAAAA
ABdBAGYAZwBoAGEAbgBpAHMAdABhAG4AAAdBAEYARwAACUEAcwBpAGEAABtTAG8AdQB0AGgAZQBy
AG4AIABBAHMAaQBhAAAPQQBsAGIAYQBuAGkAYQAAB0EATABCAAANRQB1AHIAbwBwAGUAAB9TAG8A
dQB0AGgAZQByAG4AIABFAHUAcgBvAHAAZQAAD0EAbABnAGUAcgBpAGEAAAdEAFoAQQAADUEAZgBy
AGkAYwBhAAAfTgBvAHIAdABoAGUAcgBuACAAQQBmAHIAaQBjAGEAAA1BAG4AZwBvAGwAYQAAB0EA
RwBPAAAlUwB1AGIALQBTAGEAaABhAHIAYQBuACAAQQBmAHIAaQBjAGEAARNBAHIAZwBlAG4AdABp
AG4AYQAAB0EAUgBHAAARQQBtAGUAcgBpAGMAYQBzAAA/TABhAHQAaQBuACAAQQBtAGUAcgBpAGMA
YQAgAGEAbgBkACAAdABoAGUAIABDAGEAcgBpAGIAYgBlAGEAbgAAD0EAcgBtAGUAbgBpAGEAAAdB
AFIATQAAGVcAZQBzAHQAZQByAG4AIABBAHMAaQBhAAATQQB1AHMAdAByAGEAbABpAGEAAAdBAFUA
UwAAD08AYwBlAGEAbgBpAGEAADNBAHUAcwB0AHIAYQBsAGkAYQAgAGEAbgBkACAATgBlAHcAIABa
AGUAYQBsAGEAbgBkAAAPQQB1AHMAdAByAGkAYQAAB0EAVQBUAAAdVwBlAHMAdABlAHIAbgAgAEUA
dQByAG8AcABlAAAVQQB6AGUAcgBiAGEAaQBqAGEAbgAAB0EAWgBFAAAPQgBhAGgAcgBhAGkAbgAA
B0IASABSAAAVQgBhAG4AZwBsAGEAZABlAHMAaAAAB0IARwBEAAAPQgBlAGwAYQByAHUAcwAAB0IA
TABSAAAdRQBhAHMAdABlAHIAbgAgAEUAdQByAG8AcABlAAAPQgBlAGwAZwBpAHUAbQAAB0IARQBM
AAANQgBoAHUAdABhAG4AAAdCAFQATgAALUIAbwBzAG4AaQBhACAAYQBuAGQAIABIAGUAcgB6AGUA
ZwBvAHYAaQBuAGEAAAdCAEkASAAADUIAcgBhAHoAaQBsAAAHQgBSAEEAABFCAHUAbABnAGEAcgBp
AGEAAAdCAEcAUgAAGUIAdQByAGsAaQBuAGEAIABGAGEAcwBvAAAHQgBGAEEAABFDAGEAbQBiAG8A
ZABpAGEAAAdLAEgATQAAJVMAbwB1AHQAaAAtAGUAYQBzAHQAZQByAG4AIABBAHMAaQBhAAERQwBh
AG0AZQByAG8AbwBuAAAHQwBNAFIAADFDAGUAbgB0AHIAYQBsACAAQQBmAHIAaQBjAGEAbgAgAFIA
ZQBwAHUAYgBsAGkAYwAAB0MAQQBGAAALQwBoAGkAbABlAAAHQwBIAEwAAAtDAGgAaQBuAGEAAAdD
AEgATgAAGUUAYQBzAHQAZQByAG4AIABBAHMAaQBhAAARQwBvAGwAbwBtAGIAaQBhAAAHQwBPAEwA
AAtDAG8AbgBnAG8AAAdDAE8ARwAAG0MA9AB0AGUAIABkACcASQB2AG8AaQByAGUAAQdDAEkAVgAA
D0MAcgBvAGEAdABpAGEAAAdIAFIAVgAAD0MAegBlAGMAaABpAGEAAAdDAFoARQAAQUQAZQBtAG8A
YwByAGEAdABpAGMAIABSAGUAcAB1AGIAbABpAGMAIABvAGYAIAB0AGgAZQAgAEMAbwBuAGcAbwAA
B0MATwBEAAAPRABlAG4AbQBhAHIAawAAB0QATgBLAAAfTgBvAHIAdABoAGUAcgBuACAARQB1AHIA
bwBwAGUAACVEAG8AbQBpAG4AaQBjAGEAbgAgAFIAZQBwAHUAYgBsAGkAYwAAB0QATwBNAAAPRQBj
AHUAYQBkAG8AcgAAB0UAQwBVAAALRQBnAHkAcAB0AAAHRQBHAFkAABdFAGwAIABTAGEAbAB2AGEA
ZABvAHIAAAdTAEwAVgAAD0UAcwB0AG8AbgBpAGEAAAdFAFMAVAAAEUUAdABoAGkAbwBwAGkAYQAA
B0UAVABIAAAJRgBpAGoAaQAAB0YASgBJAAATTQBlAGwAYQBuAGUAcwBpAGEAAA9GAGkAbgBsAGEA
bgBkAAAHRgBJAE4AAA1GAHIAYQBuAGMAZQAAB0YAUgBBAAAbRgByAGUAbgBjAGgAIABHAHUAaQBh
AG4AYQAAB0cAVQBGAAAPRwBlAG8AcgBnAGkAYQAAB0cARQBPAAAPRwBlAHIAbQBhAG4AeQAAB0QA
RQBVAAALRwBoAGEAbgBhAAAHRwBIAEEAAA1HAHIAZQBlAGMAZQAAB0cAUgBDAAAVRwB1AGEAZABl
AGwAbwB1AHAAZQAAB0cATABQAAATRwB1AGEAdABlAG0AYQBsAGEAAAdHAFQATQAAEUgAbwBuAGQA
dQByAGEAcwAAB0gATgBEAAAPSAB1AG4AZwBhAHIAeQAAB0gAVQBOAAAPSQBjAGUAbABhAG4AZAAA
B0kAUwBMAAALSQBuAGQAaQBhAAAHSQBOAEQAABNJAG4AZABvAG4AZQBzAGkAYQAAB0kARABOAAA1
SQByAGEAbgAgACgASQBzAGwAYQBtAGkAYwAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgApAAAHSQBS
AE4AAAlJAHIAYQBxAAAHSQBSAFEAAA9JAHIAZQBsAGEAbgBkAAAHSQBSAEwAAA1JAHMAcgBhAGUA
bAAAB0kAUwBSAAALSQB0AGEAbAB5AAAHSQBUAEEAAA9KAGEAbQBhAGkAYwBhAAAHSgBBAE0AAAtK
AGEAcABhAG4AAAdKAFAATgAADUoAbwByAGQAYQBuAAAHSgBPAFIAABVLAGEAegBhAGsAaABzAHQA
YQBuAAAHSwBBAFoAABlDAGUAbgB0AHIAYQBsACAAQQBzAGkAYQAAC0sAZQBuAHkAYQAAB0sARQBO
AAAVSwB5AHIAZwB5AHoAcwB0AGEAbgAAB0sARwBaAABBTABhAG8AIABQAGUAbwBwAGwAZQAnAHMA
IABEAGUAbQBvAGMAcgBhAHQAaQBjACAAUgBlAHAAdQBiAGwAaQBjAAEHTABBAE8AAA1MAGEAdAB2
AGkAYQAAB0wAVgBBAAATTABpAHQAaAB1AGEAbgBpAGEAAAdMAFQAVQAAFUwAdQB4AGUAbQBiAG8A
dQByAGcAAAdMAFUAWAAAFU0AYQBkAGEAZwBhAHMAYwBhAHIAAAdNAEQARwAAEU0AYQBsAGEAeQBz
AGkAYQAAB00AWQBTAAARTQBhAGwAZABpAHYAZQBzAAAHTQBEAFYAAAlNAGEAbABpAAAHTQBMAEkA
AAtNAGEAbAB0AGEAAAdNAEwAVAAAE00AYQB1AHIAaQB0AGkAdQBzAAAHTQBVAFMAAA1NAGUAeABp
AGMAbwAAB00ARQBYAAARTQBvAG4AZwBvAGwAaQBhAAAHTQBOAEcAAA9NAG8AcgBvAGMAYwBvAAAH
TQBBAFIAABVNAG8AegBhAG0AYgBpAHEAdQBlAAAHTQBPAFoAAA9NAHkAYQBuAG0AYQByAAAHTQBN
AFIAAAtOAGUAcABhAGwAAAdOAFAATAAAF04AZQB0AGgAZQByAGwAYQBuAGQAcwAAB04ATABEAAAb
TgBlAHcAIABDAGEAbABlAGQAbwBuAGkAYQAAB04AQwBMAAAXTgBlAHcAIABaAGUAYQBsAGEAbgBk
AAAHTgBaAEwAAA9OAGkAZwBlAHIAaQBhAAAHTgBHAEEAAB9OAG8AcgB0AGgAIABNAGEAYwBlAGQA
bwBuAGkAYQAAB00ASwBEAAANTgBvAHIAdwBhAHkAAAdOAE8AUgAACU8AbQBhAG4AAAdPAE0ATgAA
EVAAYQBrAGkAcwB0AGEAbgAAB1AAQQBLAAANUABhAG4AYQBtAGEAAAdQAEEATgAAIVAAYQBwAHUA
YQAgAE4AZQB3ACAARwB1AGkAbgBlAGEAAAdQAE4ARwAAEVAAYQByAGEAZwB1AGEAeQAAB1AAUgBZ
AAAJUABlAHIAdQAAB1AARQBSAAAXUABoAGkAbABpAHAAcABpAG4AZQBzAAAHUABIAEwAAA1QAG8A
bABhAG4AZAAAB1AATwBMAAARUABvAHIAdAB1AGcAYQBsAAAHUABSAFQAAAtRAGEAdABhAHIAAAdR
AEEAVAAAJ1IAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAE0AbwBsAGQAbwB2AGEAAAdNAEQAQQAAD1IA
bwBtAGEAbgBpAGEAAAdSAE8AVQAAJVIAdQBzAHMAaQBhAG4AIABGAGUAZABlAHIAYQB0AGkAbwBu
AAAHUgBVAFMAAA1SAHcAYQBuAGQAYQAAB1IAVwBBAAAPUwBlAG4AZQBnAGEAbAAAB1MARQBOAAAN
UwBlAHIAYgBpAGEAAAdTAFIAQgAAGVMAaQBlAHIAcgBhACAATABlAG8AbgBlAAAHUwBMAEUAABNT
AGkAbgBnAGEAcABvAHIAZQAAB1MARwBQAAARUwBsAG8AdgBhAGsAaQBhAAAHUwBWAEsAABFTAGwA
bwB2AGUAbgBpAGEAAAdTAFYATgAAGVMAbwB1AHQAaAAgAEEAZgByAGkAYwBhAAAHWgBBAEYAAAtT
AHAAYQBpAG4AAAdFAFMAUAAAE1MAcgBpACAATABhAG4AawBhAAAHTABLAEEAAAtTAHUAZABhAG4A
AAdTAEQATgAADVMAdwBlAGQAZQBuAAAHUwBXAEUAABdTAHcAaQB0AHoAZQByAGwAYQBuAGQAAAdD
AEgARQAAKVMAeQByAGkAYQBuACAAQQByAGEAYgAgAFIAZQBwAHUAYgBsAGkAYwAAB1MAWQBSAAAR
VABoAGEAaQBsAGEAbgBkAAAHVABIAEEAAAlUAG8AZwBvAAAHVABHAE8AAA9UAHUAbgBpAHMAaQBh
AAAHVABVAE4AAA1UAHUAcgBrAGUAeQAAB1QAVQBSAAANVQBnAGEAbgBkAGEAAAdVAEcAQQAAD1UA
awByAGEAaQBuAGUAAAdVAEsAUgAAaVUAbgBpAHQAZQBkACAASwBpAG4AZwBkAG8AbQAgAG8AZgAg
AEcAcgBlAGEAdAAgAEIAcgBpAHQAYQBpAG4AIABhAG4AZAAgAE4AbwByAHQAaABlAHIAbgAgAEkA
cgBlAGwAYQBuAGQAAAdHAEIAUgAAN1UAbgBpAHQAZQBkACAAUgBlAHAAdQBiAGwAaQBjACAAbwBm
ACAAVABhAG4AegBhAG4AaQBhAAAHVABaAEEAADFVAG4AaQB0AGUAZAAgAFMAdABhAHQAZQBzACAA
bwBmACAAQQBtAGUAcgBpAGMAYQAAB1UAUwBBAAAhTgBvAHIAdABoAGUAcgBuACAAQQBtAGUAcgBp
AGMAYQAAD1UAcgB1AGcAdQBhAHkAAAdVAFIAWQAAFVUAegBiAGUAawBpAHMAdABhAG4AAAdVAFoA
QgAARVYAZQBuAGUAegB1AGUAbABhACAAKABCAG8AbABpAHYAYQByAGkAYQBuACAAUgBlAHAAdQBi
AGwAaQBjACAAbwBmACkAAAdWAEUATgAAEVYAaQBlAHQAIABOAGEAbQAAB1YATgBNAAANWgBhAG0A
YgBpAGEAAAdaAE0AQgAAD0EAbgBkAG8AcgByAGEAAAdBAE4ARAAAJ0EAbgB0AGkAZwB1AGEAIABh
AG4AZAAgAEIAYQByAGIAdQBkAGEAAAdBAFQARwAAD0IAYQBoAGEAbQBhAHMAAAdCAEgAUwAAEUIA
YQByAGIAYQBkAG8AcwAAB0IAUgBCAAANQgBlAGwAaQB6AGUAAAdCAEwAWgAAC0IAZQBuAGkAbgAA
B0IARQBOAABBQgBvAGwAaQB2AGkAYQAgACgAUABsAHUAcgBpAG4AYQB0AGkAbwBuAGEAbAAgAFMA
dABhAHQAZQAgAG8AZgApAAAHQgBPAEwAABFCAG8AdABzAHcAYQBuAGEAAAdCAFcAQQAAI0IAcgB1
AG4AZQBpACAARABhAHIAdQBzAHMAYQBsAGEAbQAAB0IAUgBOAAAPQgB1AHIAdQBuAGQAaQAAB0IA
RABJAAAVQwBhAGIAbwAgAFYAZQByAGQAZQAAB0MAUABWAAANQwBhAG4AYQBkAGEAAAdDAEEATgAA
CUMAaABhAGQAAAdUAEMARAAAD0MAbwBtAG8AcgBvAHMAAAdDAE8ATQAARUMAbwBuAGcAbwAgACgA
RABlAG0AbwBjAHIAYQB0AGkAYwAgAFIAZQBwAHUAYgBsAGkAYwAgAG8AZgAgAHQAaABlACkAABVD
AG8AcwB0AGEAIABSAGkAYwBhAAAHQwBSAEkAAAlDAHUAYgBhAAAHQwBVAEIAAA1DAHkAcAByAHUA
cwAAB0MAWQBQAAARRABqAGkAYgBvAHUAdABpAAAHRABKAEkAABFEAG8AbQBpAG4AaQBjAGEAAAdE
AE0AQQAAI0UAcQB1AGEAdABvAHIAaQBhAGwAIABHAHUAaQBuAGUAYQAAB0cATgBRAAAPRQByAGkA
dAByAGUAYQAAB0UAUgBJAAArRQBzAHcAYQB0AGkAbgBpACAAKABLAGkAbgBnAGQAbwBtACAAbwBm
ACkAAAdTAFcAWgAAC0cAYQBiAG8AbgAAB0cAQQBCAAANRwBhAG0AYgBpAGEAAAdHAE0AQgAAD0cA
cgBlAG4AYQBkAGEAAAdHAFIARAAADUcAdQBpAG4AZQBhAAAHRwBJAE4AABtHAHUAaQBuAGUAYQAt
AEIAaQBzAHMAYQB1AAEHRwBOAEIAAA1HAHUAeQBhAG4AYQAAB0cAVQBZAAALSABhAGkAdABpAAAH
SABUAEkAACtIAG8AbgBnACAASwBvAG4AZwAsACAAQwBoAGkAbgBhACgAUwBBAFIAKQAAB0gASwBH
AAARSwBpAHIAaQBiAGEAdABpAAAHSwBJAFIAABVNAGkAYwByAG8AbgBlAHMAaQBhAAAnSwBvAHIA
ZQBhACAAKABSAGUAcAB1AGIAbABpAGMAIABvAGYAKQAAB0sATwBSAAANSwB1AHcAYQBpAHQAAAdL
AFcAVAAAD0wAZQBiAGEAbgBvAG4AAAdMAEIATgAAD0wAZQBzAG8AdABoAG8AAAdMAFMATwAAD0wA
aQBiAGUAcgBpAGEAAAdMAEIAUgAAC0wAaQBiAHkAYQAAB0wAQgBZAAAbTABpAGUAYwBoAHQAZQBu
AHMAdABlAGkAbgAAB0wASQBFAAANTQBhAGwAYQB3AGkAAAdNAFcASQAAIU0AYQByAHMAaABhAGwA
bAAgAEkAcwBsAGEAbgBkAHMAAAdNAEgATAAAFU0AYQB1AHIAaQB0AGEAbgBpAGEAAAdNAFIAVAAA
QU0AaQBjAHIAbwBuAGUAcwBpAGEAIAAoAEYAZQBkAGUAcgBhAHQAZQBkACAAUwB0AGEAdABlAHMA
IABvAGYAKQAAB0YAUwBNAAArTQBvAGwAZABvAHYAYQAgACgAUgBlAHAAdQBiAGwAaQBjACAAbwBm
ACkAABVNAG8AbgB0AGUAbgBlAGcAcgBvAAAHTQBOAEUAAA9OAGEAbQBpAGIAaQBhAAAHTgBBAE0A
ABNOAGkAYwBhAHIAYQBnAHUAYQAAB04ASQBDAAALTgBpAGcAZQByAAAHTgBFAFIAAAtQAGEAbABh
AHUAAAdQAEwAVwAAJ1AAYQBsAGUAcwB0AGkAbgBlACwAIABTAHQAYQB0AGUAIABvAGYAAAdQAFMA
RQAAK1MAYQBpAG4AdAAgAEsAaQB0AHQAcwAgAGEAbgBkACAATgBlAHYAaQBzAAAHSwBOAEEAABdT
AGEAaQBuAHQAIABMAHUAYwBpAGEAAAdMAEMAQQAAQVMAYQBpAG4AdAAgAFYAaQBuAGMAZQBuAHQA
IABhAG4AZAAgAHQAaABlACAARwByAGUAbgBhAGQAaQBuAGUAcwAAB1YAQwBUAAALUwBhAG0AbwBh
AAAHVwBTAE0AABNQAG8AbAB5AG4AZQBzAGkAYQAAK1MAYQBvACAAVABvAG0AZQAgAGEAbgBkACAA
UAByAGkAbgBjAGkAcABlAAAHUwBUAFAAABlTAGEAdQBkAGkAIABBAHIAYQBiAGkAYQAAB1MAQQBV
AAAVUwBlAHkAYwBoAGUAbABsAGUAcwAAB1MAWQBDAAAfUwBvAGwAbwBtAG8AbgAgAEkAcwBsAGEA
bgBkAHMAAAdTAEwAQgAAF1MAbwB1AHQAaAAgAFMAdQBkAGEAbgAAB1MAUwBEAAARUwB1AHIAaQBu
AGEAbQBlAAAHUwBVAFIAABVUAGEAagBpAGsAaQBzAHQAYQBuAAAHVABKAEsAADtUAGEAbgB6AGEA
bgBpAGEAIAAoAFUAbgBpAHQAZQBkACAAUgBlAHAAdQBiAGwAaQBjACAAbwBmACkAABdUAGkAbQBv
AHIALQBMAGUAcwB0AGUAAQdUAEwAUwAAC1QAbwBuAGcAYQAAB1QATwBOAAAnVAByAGkAbgBpAGQA
YQBkACAAYQBuAGQAIABUAG8AYgBhAGcAbwAAB1QAVABPAAAZVAB1AHIAawBtAGUAbgBpAHMAdABh
AG4AAAdUAEsATQAAKVUAbgBpAHQAZQBkACAAQQByAGEAYgAgAEUAbQBpAHIAYQB0AGUAcwAAB0EA
UgBFAAAdVQBuAGkAdABlAGQAIABLAGkAbgBnAGQAbwBtAAAbVQBuAGkAdABlAGQAIABTAHQAYQB0
AGUAcwAAD1YAYQBuAHUAYQB0AHUAAAdWAFUAVAAAC1kAZQBtAGUAbgAAB1kARQBNAAAZUwBhAGkA
bgB0ACAASABlAGwAZQBuAGEAAAdTAEgATgAAC0EAcgB1AGIAYQAAB0EAQgBXAAARQQBuAGcAdQBp
AGwAbABhAAAHQQBJAEEAAENCAG8AbgBhAGkAcgBlACwAIABTAGEAaQBuAHQAIABFAHUAcwB0AGEA
dABpAHUAcwAgAGEAbgBkACAAUwBhAGIAYQAAB0IARQBTAAAPQgBlAHIAbQB1AGQAYQAAB0IATQBV
AAAZQwBvAG8AawAgAEkAcwBsAGEAbgBkAHMAAAdDAE8ASwAAD0MAdQByAGEAYwBhAG8AAAdDAFUA
VwAAHUMAYQB5AG0AYQBuACAASQBzAGwAYQBuAGQAcwAAB0MAWQBNAAAhRgBhAGwAawBsAGEAbgBk
ACAASQBzAGwAYQBuAGQAcwAAB0YATABLAAAbRgBhAHIAbwBlACAASQBzAGwAYQBuAGQAcwAAB0YA
UgBPAAARRwB1AGUAcgBuAHMAZQB5AAAHRwBHAFkAABNHAHIAZQBlAG4AbABhAG4AZAAAB0cAUgBM
AAAXSQBzAGwAZQAgAG8AZgAgAE0AYQBuAAAHSQBNAE4AAA1KAGUAcgBzAGUAeQAAB0oARQBZAAAL
TQBhAGMAYQBvAAAHTQBBAEMAAA1NAG8AbgBhAGMAbwAAB00AQwBPAAAVTQBvAG4AdABzAGUAcgBy
AGEAdAAAB00AUwBSAAAJTgBpAHUAZQAAB04ASQBVAAARUABpAHQAYwBhAGkAcgBuAAAHUABDAE4A
ABdQAHUAZQByAHQAbwAgAFIAaQBjAG8AAAdQAFIASQAAIUYAcgBlAG4AYwBoACAAUABvAGwAeQBu
AGUAcwBpAGEAAAdQAFkARgAAFVMAYQBuACAATQBhAHIAaQBuAG8AAAdTAE0AUgAAD1MAbwBtAGEA
bABpAGEAAAdTAE8ATQAAM1MAYQBpAG4AdAAgAFAAaQBlAHIAcgBlACAAYQBuAGQAIABNAGkAcQB1
AGUAbABvAG4AAAdTAFAATQAAGVMAaQBuAHQAIABNAGEAYQByAHQAZQBuAAAHUwBYAE0AADFUAHUA
cgBrAHMAIABhAG4AZAAgAEMAYQBpAGMAbwBzACAASQBzAGwAYQBuAGQAcwAAB1QAQwBBAAAPVABv
AGsAZQBsAGEAdQAAB1QASwBMAAANVAB1AHYAYQBsAHUAAAdUAFUAVgAADVQAYQBpAHcAYQBuAAAH
VABXAE4AAA9WAGEAdABpAGMAYQBuAAAHVgBBAFQAAC1CAHIAaQB0AGkAcwBoACAAVgBpAHIAZwBp
AG4AIABJAHMAbABhAG4AZABzAAAHVgBHAEIAACNXAGEAbABsAGkAcwAgAGEAbgBkACAARgB1AHQA
dQBuAGEAAAdXAEwARgAAE0cAaQBiAHIAYQBsAHQAYQByAAAHRwBJAEIAAAtOAGEAdQByAHUAAAdO
AFIAVQAAEVoAaQBtAGIAYQBiAHcAZQAAB1oAVwBFAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD08AdQB0AHAAdQB0AGEAAHFTAEMAXwAxAGMAMQAwAGEAYQBmADUA
OABmAGYAMwA0AGEAZgBjADgANQBjAGUAMwA0AGIAZQBhAGMAMwA4ADUAMgAyADUALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAhy1/aKZ8DUSI0W/p91cMfAAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQgJIAMBEj0dCBJBBSACAQgcAyAAAgYAAggSQQ4FIAEd
CAgGAAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhIMAwYSRQMG
ElEDBhJVAwYSIAQgAQECCyAEAQgdCB0SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAA
AQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMWMxMGFhZjU4ZmYzNGFmYzg1Y2UzNGJlYWMzODUy
MjUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAJSjAAAAAAAAAAAAAK6jAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgowAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYwAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMQBjADEAMABhAGEAZgA1ADgAZgBmADMANABhAGYAYwA4ADUAYwBlADMANABiAGUA
YQBjADMAOAA1ADIAMgA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAxAGMAMQAwAGEA
YQBmADUAOABmAGYAMwA0AGEAZgBjADgANQBjAGUAMwA0AGIAZQBhAGMAMwA4ADUAMgAyADUALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADEA
YwAxADAAYQBhAGYANQA4AGYAZgAzADQAYQBmAGMAOAA1AGMAZQAzADQAYgBlAGEAYwAzADgANQAy
ADIANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAxAGMA
MQAwAGEAYQBmADUAOABmAGYAMwA0AGEAZgBjADgANQBjAGUAMwA0AGIAZQBhAGMAMwA4ADUAMgAy
ADUAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAMAzAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_1c10aaf58ff34afc85ce34beac385225</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">98</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa]"
                      hasSideEffects="true"
                      name="Outputa">
                      <outputColumns>
                        <outputColumn
                          refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[ID]"
                          dataType="i4"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country name]"
                          codePage="1250"
                          dataType="str"
                          length="100"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country name]"
                          name="country name" />
                        <outputColumn
                          refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country-code]"
                          codePage="1250"
                          dataType="str"
                          length="100"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[country-code]"
                          name="country-code" />
                        <outputColumn
                          refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[region]"
                          codePage="1250"
                          dataType="str"
                          length="100"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[region]"
                          name="region" />
                        <outputColumn
                          refId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[sub-region]"
                          codePage="1250"
                          dataType="str"
                          length="100"
                          lineageId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa].Columns[sub-region]"
                          name="sub-region" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\First use\Create table with countries and regions.Paths[Outputa]"
                  endId="Package\First use\Create table with countries and regions\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="Outputa"
                  startId="Package\First use\Create table with countries and regions\Script Component.Outputs[Outputa]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Delete downloaded"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{CE5A0FB2-65CB-46BA-A6E8-FB80C528E842}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete downloaded"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_572db21fb91b4fe5b196a495ca28ed0f"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CovidData,User::DownloadLocation">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Settings.get_Default():ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Sett" +
    "ings")]

namespace ST_572db21fb91b4fe5b196a495ca28ed0f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_572db21fb91b4fe5b196a495ca28ed0f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{86b4e7e2-2a0e-4555-a873-052561638334}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_572db21fb91b4fe5b196a495ca28ed0f</RootNamespace>
    <AssemblyName>ST_572db21fb91b4fe5b196a495ca28ed0f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_572db21fb91b4fe5b196a495ca28ed0f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string fileName = Dts.Variables["User::DownloadLocation"].Value.ToString()  + "\\" + Dts.Variables["User::CovidData"].Value.ToString();
            File.Delete(fileName);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_572db21fb91b4fe5b196a495ca28ed0f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_572db21fb91b4fe5b196a495ca28ed0f</msb:DisplayName>
    <msb:ProjectId>{EB740378-8DA9-4FA0-A737-0845BBEC8F99}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_572db21fb91b4fe5b196a495ca28ed0f.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_572db21fb91b4fe5b196a495ca28ed0f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_572db21fb91b4fe5b196a495ca28ed0f")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_572db21fb91b4fe5b196a495ca28ed0f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_572db21fb91b4fe5b196a495ca28ed0f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_572db21fb91b4fe5b196a495ca28ed0f.dll">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
AAAAAAAAAABSALwDAAAAAA8AAAAAAAAAAAAAAFsAFAAAAAAAAAAAAAEAAACMBAAABQACAAAAAAAA
PE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU1RfNTcyZGIyMWZiOTFiNGZl
NWIxOTZhNDk1Y2EyOGVkMGYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNy
b3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3Mu
U2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNTcy
ZGIyMWZiOTFiNGZlNWIxOTZhNDk1Y2EyOGVkMGYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAu
Y3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81NzJkYjIxZmI5MWI0ZmU1YjE5NmE0OTVjYTI4ZWQw
Zi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNTcyZGIy
MWZiOTFiNGZlNWIxOTZhNDk1Y2EyOGVkMGYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRp
bmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1
bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAtVQBzAGUAcgA6ADoARABvAHcAbgBsAG8A
YQBkAEwAbwBjAGEAdABpAG8AbgAAA1wAAB9VAHMAZQByADoAOgBDAG8AdgBpAGQARABhAHQAYQAA
cVMAVABfADUANwAyAGQAYgAyADEAZgBiADkAMQBiADQAZgBlADUAYgAxADkANgBhADQAOQA1AGMA
YQAyADgAZQBkADAAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AAAAgZMvHlVTtk63q5mSNzhPlAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQgABJhBCAAEmUF
IAESaRwDIAAcAyAADgYAAw4ODg4EAAEBDgYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMA
AAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzU3MmRiMjFmYjkxYjRmZTViMTk2YTQ5NWNhMjhlZDBmAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9C0A
AAAAAAAAAAAADi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDNl4sfAAABAM2Xix8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADUANwAyAGQAYgAyADEAZgBiADkAMQBiADQAZgBlADUAYgAxADkANgBhADQAOQA1
AGMAYQAyADgAZQBkADAAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADAANwA1AC4AMwA4ADgANgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADUANwAyAGQAYgAyADEAZgBiADkAMQBiADQAZgBlADUAYgAxADkANgBhADQAOQA1AGMA
YQAyADgAZQBkADAAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANQA3ADIAZABiADIAMQBmAGIAOQAxAGIANABmAGUANQBiADEAOQA2AGEA
NAA5ADUAYwBhADIAOABlAGQAMABmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADUANwAyAGQAYgAyADEAZgBiADkAMQBiADQAZgBlADUAYgAxADkANgBhADQA
OQA1AGMAYQAyADgAZQBkADAAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAAwADcANQAuADMAOAA4ADYAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADcANQAuADMAOAA4ADYAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Delete temp folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{7A29240F-0F42-4D03-9B5A-E10EBD077B93}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete temp folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteDirectory"
              TaskSourcePath="User::DownloadLocation"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::DownloadLocation"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Download COVID"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7f503a3e-9356-4a1f-beea-25cc98cfd74e}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download COVID"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_18f9a0b0f10e4703ba9fa867164093c9"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::COVID,User::CovidData,User::DownloadLocation,User::FlatFileLocation">
              <ProjectItem
                Name="ST_18f9a0b0f10e4703ba9fa867164093c9.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8b455815-f234-456b-84d4-ceb5d780252a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3ff3f14cbfa04af3be186d7039eeedde</RootNamespace>
    <AssemblyName>ST_18f9a0b0f10e4703ba9fa867164093c9</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Settings.get_Default():ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Sett" +
    "ings")]

namespace ST_3ff3f14cbfa04af3be186d7039eeedde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
#endregion

namespace ST_3ff3f14cbfa04af3be186d7039eeedde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            try
            {
                string newFolder = Dts.Variables["User::DownloadLocation"].Value.ToString();
                if (!Directory.Exists(newFolder))
                {
                    DirectoryInfo di = Directory.CreateDirectory(newFolder);
                    // usuwanie: di.Delete();
                }
                string myURI = "https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/";
                string fileName = Dts.Variables["User::CovidData"].Value.ToString(), myWebString = null, myLocalPath = null;
                myWebString = myURI + fileName;
                myLocalPath = Dts.Variables["User::DownloadLocation"].Value.ToString() + "\\" + fileName;
                WebClient myWebClient = new WebClient();
                myWebClient.DownloadFile(myWebString, myLocalPath);
                myWebClient.Dispose();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(18, "The process failed", ex.ToString(), "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
                
            }
            // To tu ju� by�o, nie usuwaj!
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_18f9a0b0f10e4703ba9fa867164093c9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_18f9a0b0f10e4703ba9fa867164093c9</msb:DisplayName>
    <msb:ProjectId>{A6B1F228-BA50-4A9F-B765-A8B630D05D67}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_18f9a0b0f10e4703ba9fa867164093c9.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3ff3f14cbfa04af3be186d7039eeedde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3ff3f14cbfa04af3be186d7039eeedde")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3ff3f14cbfa04af3be186d7039eeedde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_18f9a0b0f10e4703ba9fa867164093c9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADm58WEAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA+jAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKgwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAABEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADc
MAAAAAAAAEgAAAACAAUAzCEAACQOAAABAAAAAAAAAPAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgD2AAAAAQAAESAADAAAKBAAAAoCKBEAAApvEgAACnIB
AABwbxMAAApvFAAACm8VAAAKCgYoFgAACi0HBigXAAAKJnIvAABwAigRAAAKbxIAAApywgAAcG8T
AAAKbxQAAApvFQAACgsUDBQNBygYAAAKDAIoEQAACm8SAAAKcgEAAHBvEwAACm8UAAAKbxUAAApy
4gAAcAcoGQAACg1zGgAACiUICW8bAAAKbxwAAAoCKBEAAAoWbx0AAAreNRMEAigRAAAKbx4AAAof
EnLmAABwEQRvFQAACnIMAQBwFm8fAAAKJgIoEQAAChdvHQAACt4AAigRAAAKFm8dAAAKKgAAARAA
AAAACgCqtAA1DwAAAR4CKCAAAAoqHgIoIQAACiqufgEAAAQtHnIOAQBw0AMAAAIoIgAACm8jAAAK
cyQAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAiglAAAKKi5zCAAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAQAACN+AACcBAAAWAYAACNT
dHJpbmdzAAAAAPQKAACAAQAAI1VTAHQMAAAQAAAAI0dVSUQAAACEDAAAoAEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACYAAAAFAAAABgAAAAkAAAABAAAAJQAAAAIAAAAQAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAMgDAQAAAAAABgB4AvcEBgAHA/cEBgDE
AeQEDwBrBQAABgDxAVsEBgBbAlsEBgA8AlsEBgDuAlsEBgCYAlsEBgCxAlsEBgAIAlsEBgAjAjUD
CgDMAncDCgA7AXcDBgBtBA4EBgAVBA4EBgCnAeQEBgD3BQ4EBgCVBBcFBgB3BEYEDgB3AbIDDgDY
AbIDDgBXATEEBgCMAfcEDgClBP4FDgD2AP4FCgCgA3cDEgCtBdYAEgCcANYABgBLBi4ABgCDBC4A
BgBRAw4EDgAkBv4FDgAuBrIDCgC5BHcDBgAGAQ4EBgClAA4EBgA8BlsEAAAAACUAAAAAAAEAAQAB
ABAAJgR4ADkAAQABAAAAEAAeBXoFSQABAAMAAAEQALcFegVdAAMABwADAQAA0AUAAEEABAAKABEA
GgSiABEAKwGmABEAaACqAAYGVwCuAFaAwAWxAFaACwGxAFAgAAAAAIYALAQGAAEAZCEAAAAAhhjX
BAYAAQBsIQAAAACDGNcEBgABAHQhAAAAAJMIkQS1AAEAoCEAAAAAkwgTAboAAQCnIQAAAACTCB8B
vwABAK8hAAAAAJYICQbFAAIAtiEAAAAAhhjXBAYAAgC+IQAAAACRGN0EygACAAAAAQAvAwkA1wQB
ABEA1wQGABkA1wQKACkA1wQQADEA1wQQADkA1wQQAEEA1wQQAEkA1wQQAFEA1wQQAFkA1wQQAGEA
1wQQAGkA1wQGAIkA1wQGALEA1wQVAMEA1wQGAMkA8AMkAHEAyAUqANkAqQUvAOEABQQ0AOkAJQM6
AJEATwM+APEA6QVCAPEARQZHAAEB8AVNAAEB8AVTAAkB1wQGAAkByQBaABEBbwEGANkAFQYBANkA
3gVgABkBzQRmAHEA1wQGAJEA1wQGACEBtwBvACEBOAZ4AJkA1wR+ALkA1wQGAAgAFACYAAgAGACd
ACkAcwAFAS4ACwDdAC4AEwDmAC4AGwAFAS4AIwAOAS4AKwA3AS4AMwA3AS4AOwA3AS4AQwAOAS4A
SwA9AS4AUwA3AS4AWwBUAUMAYwCdAEkAcwAFAWEAewCdAGMAawCdABsAAwABAAQAAwAAAJUEzgAA
ADMB0wAAAA0G2AACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAH0fJJwAAAAAAAABAAAA
BAAAAAAAAAAAAAAAhgBfAAAAAAAPAAAAAAAAAAAAAACPAFgDAAAAAAQAAAAAAAAAAAAAAIYADgQA
AAAADwAAAAAAAAAAAAAAjwA4AAAAAAAAAAAAAQAAACgFAAAFAAIAAAAAAABTVF8xOGY5YTBiMGYx
MGU0NzAzYmE5ZmE4NjcxNjQwOTNjOQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFNUXzNmZjNm
MTRjYmZhMDRhZjNiZTE4NmQ3MDM5ZWVlZGRlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAERvd25sb2FkRmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFNlY3VyaXR5UHJvdG9jb2xUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2Vt
Ymx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFs
dWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMThmOWEwYjBmMTBl
NDcwM2JhOWZhODY3MTY0MDkzYzkuZGxsAHNldF9TZWN1cml0eVByb3RvY29sAGdldF9JdGVtAFN5
c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZv
AERpcmVjdG9yeUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEV2
ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzNm
ZjNmMTRjYmZhMDRhZjNiZTE4NmQ3MDM5ZWVlZGRlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8zZmYzZjE0Y2JmYTA0YWYzYmUxODZkNzAzOWVlZWRkZS5Q
cm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AE9iamVjdABTeXN0ZW0uTmV0AGdldF9EZWZh
dWx0AHNldF9UYXNrUmVzdWx0AFdlYkNsaWVudABDb21wb25lbnQAZ2V0X0Fzc2VtYmx5AENyZWF0
ZURpcmVjdG9yeQAAAAAALVUAcwBlAHIAOgA6AEQAbwB3AG4AbABvAGEAZABMAG8AYwBhAHQAaQBv
AG4AAICRaAB0AHQAcABzADoALwAvAHIAYQB3AC4AZwBpAHQAaAB1AGIAdQBzAGUAcgBjAG8AbgB0
AGUAbgB0AC4AYwBvAG0ALwBvAHcAaQBkAC8AYwBvAHYAaQBkAC0AMQA5AC0AZABhAHQAYQAvAG0A
YQBzAHQAZQByAC8AcAB1AGIAbABpAGMALwBkAGEAdABhAC8AAR9VAHMAZQByADoAOgBDAG8AdgBp
AGQARABhAHQAYQAAA1wAACVUAGgAZQAgAHAAcgBvAGMAZQBzAHMAIABmAGEAaQBsAGUAZAAAAQBx
UwBUAF8AMwBmAGYAMwBmADEANABjAGIAZgBhADAANABhAGYAMwBiAGUAMQA4ADYAZAA3ADAAMwA5
AGUAZQBlAGQAZABlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAADp
AJpHezkxS42TYbUYDuavAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVCAcFDg4ODhI9BQABARFp
BCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAABAg4FAAESfQ4FAAIODg4GAAMODg4OBSACAQ4OBSAA
EoCNCCAFAggODg4ICAABEoCREYCVBSAAEoCZByACAQ4SgJkIt3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQI
ABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzNmZjNmMTRjYmZhMDRhZjNiZTE4NmQ3MDM5ZWVlZGRlAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA0DAAAAAAAAAAAAAA
6jAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwwAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABACScfR8AAAEAJJx9Hz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMwBmAGYAMwBmADEANABjAGIAZgBhADAANABhAGYAMwBiAGUAMQA4ADYAZAA3ADAA
MwA5AGUAZQBlAGQAZABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMAA2ADEALgAzADkAOQA3ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMQA4AGYAOQBhADAAYgAwAGYAMQAwAGUANAA3ADAAMwBiAGEAOQBmAGEAOAA2ADcAMQA2
ADQAMAA5ADMAYwA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAxADgAZgA5AGEAMABiADAAZgAxADAAZQA0ADcAMAAzAGIAYQA5AGYAYQA4
ADYANwAxADYANAAwADkAMwBjADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AMwBmAGYAMwBmADEANABjAGIAZgBhADAANABhAGYAMwBiAGUAMQA4ADYAZAA3
ADAAMwA5AGUAZQBlAGQAZABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADAANgAxAC4AMwA5ADkANwAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAANgAxAC4AMwA5ADkANwAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Download Indicators"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{602ebb7b-7f06-4283-9d68-5ebd03b402e6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download Indicators"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_6fcd8d068b074681a5684ae800e0e2f4"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DownloadLocation,User::FlatFileLocation">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Settings.get_Default():ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Sett" +
    "ings")]

namespace ST_0dcb14a6f44847c4945b7b196a1f6850.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_6fcd8d068b074681a5684ae800e0e2f4.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8876c6d3-0c08-4cab-a0af-8ea2ed3c6dd2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0dcb14a6f44847c4945b7b196a1f6850</RootNamespace>
    <AssemblyName>ST_6fcd8d068b074681a5684ae800e0e2f4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
using System.Collections.Generic;
#endregion

namespace ST_3ff3f14cbfa04af3be186d7039eeedde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            try
            {
                string newFolder = Dts.Variables["User::DownloadLocation"].Value.ToString();
                if (!Directory.Exists(newFolder))
                {
                    DirectoryInfo di = Directory.CreateDirectory(newFolder);
                    // usuwanie: di.Delete();
                }
                /*string myURI = ;*/
                Dictionary<string,string> indicators = new Dictionary<string, string>();
                indicators.Add("DeathRate.zip", "https://api.worldbank.org/v2/en/indicator/SP.DYN.CDRT.IN?downloadformat=csv");
                indicators.Add("PopulationTotal.zip", "https://api.worldbank.org/v2/en/indicator/SP.POP.TOTL?downloadformat=csv");
                indicators.Add("PopulationDensity.zip", "https://api.worldbank.org/v2/en/indicator/EN.POP.DNST?downloadformat=csv");
                indicators.Add("InternationalTourism.zip", "https://api.worldbank.org/v2/en/indicator/ST.INT.ARVL?downloadformat=csv");
                indicators.Add("UrbanPopPercent.zip", "https://api.worldbank.org/v2/en/indicator/SP.URB.TOTL.IN.ZS?downloadformat=csv");


                foreach (var plik in indicators)
                {

                    string fileName = plik.Key, myWebString = null, myLocalPath = null;
                    myWebString = plik.Value;
                    myLocalPath = Dts.Variables["User::DownloadLocation"].Value.ToString() + "\\" + fileName;
                    WebClient myWebClient = new WebClient();
                    myWebClient.DownloadFile(myWebString, myLocalPath);
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(18, "The process failed", ex.ToString(), "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            // To tu ju? by?o, nie usuwaj!
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6fcd8d068b074681a5684ae800e0e2f4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6fcd8d068b074681a5684ae800e0e2f4</msb:DisplayName>
    <msb:ProjectId>{1F19B60B-072B-4077-8DE4-2D1783599D3B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6fcd8d068b074681a5684ae800e0e2f4.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0dcb14a6f44847c4945b7b196a1f6850")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0dcb14a6f44847c4945b7b196a1f6850")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0dcb14a6f44847c4945b7b196a1f6850.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0dcb14a6f44847c4945b7b196a1f6850.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_6fcd8d068b074681a5684ae800e0e2f4.dll">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
EAAxACwFEAA5ACwFEABBACwFEABJACwFEABRACwFEABZACwFEABhACwFEABpACwFBgChACwFBgDJ
ACwFFQDZACwFBgDhADcEMABxAB0GNgDxAP4FOwD5AEwEQAABAWwDRwCpAJYDSwAJAT4GTwAJAa0G
VAAMACwFBgAMAJ8AYgAMAB4FagAUAIMGfAAcAJgGjgAcAGwDkwAZAUUGmAAhASwFBgAhARABnwDx
AGoGAQAUAI8GpQApAbYBBgDxADMGqQAxARQFrwBxACwFBgCpACwFBgA5Af4AuAA5AaAGwQCxACwF
xwDRACwFBgAIABQA4QAIABgA5gApAHMATgEuAAsAJgEuABMALwEuABsATgEuACMAVwEuACsAgAEu
ADMAgAEuADsAgAEuAEMAVwEuAEsAhgEuAFMAgAEuAFsAnQFDAGMA5gBJAHMATgFhAHsA5gBjAGsA
5gAbAAMAAQAEAAMAAADcBBcBAAB6ARwBAABiBiEBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAWwB1
AIcABIAAAAEAAAC+H+ScAAAAAAAAHQAAAAQAAAAAAAAAAAAAAM8AewAAAAAADwAAAAAAAAAAAAAA
2ACfAwAAAAAEAAAAAAAAAAAAAADPAFUEAAAAAA8AAAAAAAAAAAAAANgAVAAAAAAAAAAAAAEAAAB9
BQAABQACAAAAAAAAS2V5VmFsdWVQYWlyYDIARGljdGlvbmFyeWAyAFNUXzZmY2Q4ZDA2OGIwNzQ2
ODFhNTY4NGFlODAwZTBlMmY0ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBB
ZGQAZGVmYXVsdEluc3RhbmNlAFNUXzNmZjNmMTRjYmZhMDRhZjNiZTE4NmQ3MDM5ZWVlZGRlAFZh
cmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERv
d25sb2FkRmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFNlY3VyaXR5UHJvdG9j
b2xUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNmZjZDhkMDY4YjA3NDY4MWE1Njg0YWU4MDBlMGUy
ZjQuZGxsAHNldF9TZWN1cml0eVByb3RvY29sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNl
TWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAERpcmVjdG9yeUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIA
RmlyZUVycm9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMGRjYjE0
YTZmNDQ4NDdjNDk0NWI3YjE5NmExZjY4NTAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUXzBkY2IxNGE2ZjQ0ODQ3YzQ5NDViN2IxOTZhMWY2ODUwLlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBnZXRfRXZlbnRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAV2ViQ2xpZW50AGdldF9DdXJyZW50AE1vdmVOZXh0AGdldF9LZXkAZ2V0
X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBlAHIAOgA6AEQAbwB3AG4AbABvAGEA
ZABMAG8AYwBhAHQAaQBvAG4AABtEAGUAYQB0AGgAUgBhAHQAZQAuAHoAaQBwAACAl2gAdAB0AHAA
cwA6AC8ALwBhAHAAaQAuAHcAbwByAGwAZABiAGEAbgBrAC4AbwByAGcALwB2ADIALwBlAG4ALwBp
AG4AZABpAGMAYQB0AG8AcgAvAFMAUAAuAEQAWQBOAC4AQwBEAFIAVAAuAEkATgA/AGQAbwB3AG4A
bABvAGEAZABmAG8AcgBtAGEAdAA9AGMAcwB2AAAnUABvAHAAdQBsAGEAdABpAG8AbgBUAG8AdABh
AGwALgB6AGkAcAAAgJFoAHQAdABwAHMAOgAvAC8AYQBwAGkALgB3AG8AcgBsAGQAYgBhAG4AawAu
AG8AcgBnAC8AdgAyAC8AZQBuAC8AaQBuAGQAaQBjAGEAdABvAHIALwBTAFAALgBQAE8AUAAuAFQA
TwBUAEwAPwBkAG8AdwBuAGwAbwBhAGQAZgBvAHIAbQBhAHQAPQBjAHMAdgAAK1AAbwBwAHUAbABh
AHQAaQBvAG4ARABlAG4AcwBpAHQAeQAuAHoAaQBwAACAkWgAdAB0AHAAcwA6AC8ALwBhAHAAaQAu
AHcAbwByAGwAZABiAGEAbgBrAC4AbwByAGcALwB2ADIALwBlAG4ALwBpAG4AZABpAGMAYQB0AG8A
cgAvAEUATgAuAFAATwBQAC4ARABOAFMAVAA/AGQAbwB3AG4AbABvAGEAZABmAG8AcgBtAGEAdAA9
AGMAcwB2AAAxSQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbABUAG8AdQByAGkAcwBtAC4AegBpAHAA
AICRaAB0AHQAcABzADoALwAvAGEAcABpAC4AdwBvAHIAbABkAGIAYQBuAGsALgBvAHIAZwAvAHYA
MgAvAGUAbgAvAGkAbgBkAGkAYwBhAHQAbwByAC8AUwBUAC4ASQBOAFQALgBBAFIAVgBMAD8AZABv
AHcAbgBsAG8AYQBkAGYAbwByAG0AYQB0AD0AYwBzAHYAACdVAHIAYgBhAG4AUABvAHAAUABlAHIA
YwBlAG4AdAAuAHoAaQBwAACAnWgAdAB0AHAAcwA6AC8ALwBhAHAAaQAuAHcAbwByAGwAZABiAGEA
bgBrAC4AbwByAGcALwB2ADIALwBlAG4ALwBpAG4AZABpAGMAYQB0AG8AcgAvAFMAUAAuAFUAUgBC
AC4AVABPAFQATAAuAEkATgAuAFoAUwA/AGQAbwB3AG4AbABvAGEAZABmAG8AcgBtAGEAdAA9AGMA
cwB2AAADXAAAJVQAaABlACAAcAByAG8AYwBlAHMAcwAgAGYAYQBpAGwAZQBkAAABAHFTAFQAXwAw
AGQAYwBiADEANABhADYAZgA0ADQAOAA0ADcAYwA0ADkANAA1AGIANwBiADEAOQA2AGEAMQBmADYA
OAA1ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAJb3bxJEXshK
p7KYszmVzd0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEUBwcOFRFBAg4OFRFFAg4ODg4OEkkF
AAEBEXUEIAASeQQgABJ9BiABEoCBHAMgABwDIAAOBAABAg4GAAESgIkOBhUSPQIODgcgAgETABMB
CiAAFRFBAhMAEwEGFRFBAg4OCiAAFRFFAhMAEwEGFRFFAg4OBCAAEwAEIAATAQYAAw4ODg4FIAIB
Dg4DIAACBSAAEoCZCCAFAggODg4ICAABEoCdEYChBSAAEoClByACAQ4SgKUIt3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAwYSWQMGEl0DBhIQAgYIAwYRFAQAABJZBAAAEl0FAAEBEl0EAAASEAMA
AAEECAASWQQIABJdBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzBkY2IxNGE2ZjQ0ODQ3YzQ5NDViN2IxOTZhMWY2ODUwAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMNQAA
AAAAAAAAAABmNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWDUAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDknL4fAAABAOScvh8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADAAZABjAGIAMQA0AGEANgBmADQANAA4ADQANwBjADQAOQA0ADUAYgA3AGIAMQA5ADYA
YQAxAGYANgA4ADUAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADEAMgA2AC4ANAAwADEANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADYAZgBjAGQAOABkADAANgA4AGIAMAA3ADQANgA4ADEAYQA1ADYAOAA0AGEAZQA4ADAAMABl
ADAAZQAyAGYANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANgBmAGMAZAA4AGQAMAA2ADgAYgAwADcANAA2ADgAMQBhADUANgA4ADQAYQBl
ADgAMAAwAGUAMABlADIAZgA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADAAZABjAGIAMQA0AGEANgBmADQANAA4ADQANwBjADQAOQA0ADUAYgA3AGIAMQA5
ADYAYQAxAGYANgA4ADUAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAAxADIANgAuADQAMAAxADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAAxADIANgAuADQAMAAxADYANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAB4NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{B12E08AF-B8FD-44EB-BA55-8800229BA836}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{33836A94-88F1-48E0-BB5E-8254A326D877}"
            DTS:ObjectName="{33836A94-88F1-48E0-BB5E-8254A326D877}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::ManualDownloadLocation]</DTS:PropertyExpression>
            <DTS:PropertyExpression
              DTS:Name="FileSpec">"*.*"</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="D:\Studies\AAA_Semestr_Ostatni\P3\Paczki\Pobrane" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\First use\Foreach Loop Container\Check if user downloaded files"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{F6EA967F-238D-4DB2-AC24-3F411ABC9911}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check if user downloaded files"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_4284188b408342f9b6d27f182a1aeeeb"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::PathPobrane,User::ManualDownloadLocation"
                  ReadWriteVariables="User::CzyPobrane">
                  <ProjectItem
                    Name="ST_4284188b408342f9b6d27f182a1aeeeb.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a97de843-390d-488e-8107-90e59ebc4f42}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4284188b408342f9b6d27f182a1aeeeb</RootNamespace>
    <AssemblyName>ST_4284188b408342f9b6d27f182a1aeeeb</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4284188b408342f9b6d27f182a1aeeeb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4284188b408342f9b6d27f182a1aeeeb")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_4284188b408342f9b6d27f182a1aeeeb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            string filePath = Dts.Variables["User::ManualDownloadLocation"].Value.ToString();
            string HDI = filePath + "\\Human Development Index (HDI).csv";
            string influenza = filePath + "\\influenza_weekly.csv.zip";
            string noDeath = filePath + "\\number-of-deaths-by-risk-factor.csv";

         
            string currentFile = Dts.Variables["User::PathPobrane"].Value.ToString();
            if (currentFile == HDI || currentFile == influenza || currentFile == noDeath)
            {
                //MessageBox.Show("Plik znaleziony - " + currentFile);
                int i = Int32.Parse(Dts.Variables["CzyPobrane"].Value.ToString());
                Dts.Variables["CzyPobrane"].Value = i + 1;

                //MessageBox.Show(Dts.Variables["CzyPobrane"].Value.ToString());
            }


            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4284188b408342f9b6d27f182a1aeeeb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4284188b408342f9b6d27f182a1aeeeb</msb:DisplayName>
    <msb:ProjectId>{4BFA508B-4C42-4BC8-8009-8222033878DB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4284188b408342f9b6d27f182a1aeeeb.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Settings.get_Default():ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Sett" +
    "ings")]

namespace ST_4284188b408342f9b6d27f182a1aeeeb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4284188b408342f9b6d27f182a1aeeeb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4284188b408342f9b6d27f182a1aeeeb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_4284188b408342f9b6d27f182a1aeeeb.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGWn9WEAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAqi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFgvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAsA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACM
LwAAAAAAAEgAAAACAAUAmCEAAAgNAAABAAAAAAAAAKAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwDTAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAolcjsAAHAoFQAACgolcoEAAHAoFQAACgtytQAAcCgVAAAKDAIoEAAACm8RAAAKcv8A
AHBvEgAACm8TAAAKbxQAAAoNCQYoFgAACi0SCQcoFgAACi0JCQgoFgAACixJAigQAAAKbxEAAApy
IwEAcG8SAAAKbxMAAApvFAAACigXAAAKEwQCKBAAAApvEQAACnIjAQBwbxIAAAoRBBdYjBwAAAFv
GAAACgIoEAAAChZvGQAACioeAigaAAAKKh4CKBsAAAoqrn4BAAAELR5yOQEAcNADAAACKBwAAApv
HQAACnMeAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaA
AwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADgAwAAI34AAEwEAACE
BQAAI1N0cmluZ3MAAAAA0AkAAKwBAAAjVVMAfAsAABAAAAAjR1VJRAAAAIwLAAB8AQAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHwAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAA
ABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAiwMBAAAAAAAGADECWwQGAMAC
WwQGAH0BSAQPAM8EAAAGAKoBCQQGABQCCQQGAPUBCQQGAKcCCQQGAFECCQQGAGoCCQQGAMEBCQQG
ANwB+AIKAIUCOgMKAPYAOgMGAMMDvAMGAGABSAQGAEkFvAMGACsEewQGABsE9AMOADABdQMOAJEB
dQMOABIB3wMGAEUBWwQKAGMDOgMSABEFoQASAHQAoQAGABQDvAMGAAEAvAMGAMEAvAMGAH0AvAMG
AG8FCQQAAAAABwAAAAAAAQABAAEAEADUAzcAOQABAAEAAAAQAIIE3gRFAAEAAwAAARAAGwXeBFkA
AwAHAAMBAAA0BQAAPQAEAAoAEQDIA4AAEQDmAIQAEQBkAIgABgYvAIwAVoAkBY8AVoDGAI8AUCAA
AAAAhgDaAwYAAQAvIQAAAACGGDsEBgABADchAAAAAIMYOwQGAAEAPyEAAAAAkwgnBJMAAQBrIQAA
AACTCM4AmAABAHIhAAAAAJMI2gCdAAEAeiEAAAAAlghQBaMAAgCBIQAAAACGGDsEBgACAIkhAAAA
AJEYQQSoAAIAAAABAPICCQA7BAEAEQA7BAYAGQA7BAoAKQA7BBAAMQA7BBAAOQA7BBAAQQA7BBAA
SQA7BBAAUQA7BBAAWQA7BBAAYQA7BBAAaQA7BAYAgQA7BAYAqQA7BBUAuQA7BAYAcQAsBSMAwQAN
BSgAyQCzAy0A0QDeAjMAiQASAzcA2QBCBTsA2QB4BUEA4QAqAUcA0QDoAkwAwQBcBQEAcQA7BAYA
iQA7BAYA6QCPAFEA6QBrBVgAkQA7BF0AsQA7BAYACAAUAHYACAAYAHsAKQBzAOMALgALALsALgAT
AMQALgAbAOMALgAjAOwALgArABUBLgAzABUBLgA7ABUBLgBDAOwALgBLABsBLgBTABUBLgBbADIB
QwBjAHsASQBzAOMAYQB7AHsAYwBrAHsAGwADAAEABAADAAAAKwSsAAAA7gCxAAAAVAW2AAIABAAD
AAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAgB/6mAAAAAAAADcAAAAEAAAAAAAAAAAAAABkAFsA
AAAAAA8AAAAAAAAAAAAAAG0AGwMAAAAABAAAAAAAAAAAAAAAZAC8AwAAAAAPAAAAAAAAAAAAAABt
ABAAAAAAAAAAAAABAAAAjAQAAAUAAgAAAABJbnQzMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF80Mjg0MTg4YjQwODM0MmY5YjZkMjdmMTgyYTFhZWVl
YgBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTVF80Mjg0MTg4YjQwODM0MmY5YjZkMjdmMTgyYTFhZWVlYi5k
bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJl
SW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQyODQx
ODhiNDA4MzQyZjliNmQyN2YxODJhMWFlZWViLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF80Mjg0MTg4YjQwODM0MmY5YjZkMjdmMTgyYTFhZWVlYi5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkA
b3BfRXF1YWxpdHkAADlVAHMAZQByADoAOgBNAGEAbgB1AGEAbABEAG8AdwBuAGwAbwBhAGQATABv
AGMAYQB0AGkAbwBuAABFXABIAHUAbQBhAG4AIABEAGUAdgBlAGwAbwBwAG0AZQBuAHQAIABJAG4A
ZABlAHgAIAAoAEgARABJACkALgBjAHMAdgAAM1wAaQBuAGYAbAB1AGUAbgB6AGEAXwB3AGUAZQBr
AGwAeQAuAGMAcwB2AC4AegBpAHAAAElcAG4AdQBtAGIAZQByAC0AbwBmAC0AZABlAGEAdABoAHMA
LQBiAHkALQByAGkAcwBrAC0AZgBhAGMAdABvAHIALgBjAHMAdgABI1UAcwBlAHIAOgA6AFAAYQB0
AGgAUABvAGIAcgBhAG4AZQAAFUMAegB5AFAAbwBiAHIAYQBuAGUAAHFTAFQAXwA0ADIAOAA0ADEA
OAA4AGIANAAwADgAMwA0ADIAZgA5AGIANgBkADIANwBmADEAOAAyAGEAMQBhAGUAZQBlAGIALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB3NEDMRvlDTInA5Ybv28XQ
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBwcFDg4ODggEIAASYQQgABJlBSABEmkcAyAAHAMg
AA4FAAIODg4FAAICDg4EAAEIDgQgAQEcBgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3N
gIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAA
AQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfNDI4NDE4OGI0MDgzNDJmOWI2ZDI3ZjE4MmExYWVlZWIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAgC8AAAAA
AAAAAAAAmi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwvAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQD6mIAfAAABAPqYgB8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADQAMgA4ADQAMQA4ADgAYgA0ADAAOAAzADQAMgBmADkAYgA2AGQAMgA3AGYAMQA4
ADIAYQAxAGEAZQBlAGUAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADAANgA0AC4AMwA5ADEANgAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADQAMgA4ADQAMQA4ADgAYgA0ADAAOAAzADQAMgBmADkAYgA2AGQAMgA3AGYAMQA4ADIA
YQAxAGEAZQBlAGUAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANAAyADgANAAxADgAOABiADQAMAA4ADMANAAyAGYAOQBiADYAZAAyADcA
ZgAxADgAMgBhADEAYQBlAGUAZQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADQAMgA4ADQAMQA4ADgAYgA0ADAAOAAzADQAMgBmADkAYgA2AGQAMgA3AGYA
MQA4ADIAYQAxAGEAZQBlAGUAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAAwADYANAAuADMAOQAxADYAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADYANAAuADMAOQAxADYAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACsPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{B6738B3C-BDB2-475E-B48D-4342A5B05E5C}"
              DTS:ObjectName="{B6738B3C-BDB2-475E-B48D-4342A5B05E5C}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::PathPobrane" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Transform Covid"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{9D95804B-C673-4FE3-B674-1EEB4BCCB981}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Transform Covid"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change COVID data.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\First use\Trigger error message"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{FBE71E6B-9696-4875-85E3-0DF94CF493BD}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Trigger error message"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4aa5e51e1c0b44548034cf73e75c43c4"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ManualDownloadLocation">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4aa5e51e1c0b44548034cf73e75c43c4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4aa5e51e1c0b44548034cf73e75c43c4")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Settings.get_Default():ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Sett" +
    "ings")]

namespace ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_4aa5e51e1c0b44548034cf73e75c43c4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string filePath = Dts.Variables["User::ManualDownloadLocation"].Value.ToString();
            string HDIPath = filePath + "\\Human Development Index (HDI).csv";
            string influenzaPath = filePath + "\\influenza_weekly.csv.zip";
            string noDeathPath = filePath + "\\number-of-deaths-by-risk-factor.csv";

            string j = "";
            string HDI = "Human Development Index(HDI).csv";
            string influenza = "influenza_weekly.csv.zip";
            string noDeath = "number-of-deaths-by-risk-factor.csv";

            string newLine = Environment.NewLine;
            
            if (!File.Exists(HDIPath))
                j += newLine + HDI;

            if (!File.Exists(influenzaPath))
                j += newLine + influenza;

            if (!File.Exists(noDeathPath))
                j += newLine + noDeath;

            MessageBox.Show("Nie wszystkie pliki są pobrane. Brakujące pliki to:"+newLine+j);
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4aa5e51e1c0b44548034cf73e75c43c4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4aa5e51e1c0b44548034cf73e75c43c4</msb:DisplayName>
    <msb:ProjectId>{B5061618-2790-40F1-B862-58671A372F6A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4aa5e51e1c0b44548034cf73e75c43c4.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_4aa5e51e1c0b44548034cf73e75c43c4.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8384706c-6b3f-4dd6-b1a7-66a5cb1e8ca6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4aa5e51e1c0b44548034cf73e75c43c4</RootNamespace>
    <AssemblyName>ST_4aa5e51e1c0b44548034cf73e75c43c4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4aa5e51e1c0b44548034cf73e75c43c4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4aa5e51e1c0b44548034cf73e75c43c4.dll">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
hwBJAHMA7wBhAHsAhwBjAGsAhwAbAAMAAQAEAAMAAAAwBLgAAAADAb0AAAB1BcIAAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAACAH8+ZAAAAAAAAAQAAAAQAAAAAAAAAAAAAAHAAXwAAAAAA
DwAAAAAAAAAAAAAAeQAgAwAAAAAEAAAAAAAAAAAAAABwAMEDAAAAAA8AAAAAAAAAAAAAAHkAOAAA
AAAABAAAAAAAAAAAAAAAcAApBQAAAAAAAAAAAQAAAJEEAAAFAAIAAAAAU1RfNGFhNWU1MWUxYzBi
NDQ1NDgwMzRjZjczZTc1YzQzYzQAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAZ2V0X05ld0xpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80YWE1ZTUxZTFjMGI0
NDU0ODAzNGNmNzNlNzVjNDNjNC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUXzRhYTVlNTFlMWMwYjQ0NTQ4MDM0Y2Y3M2U3NWM0M2M0LlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80YWE1ZTUxZTFjMGI0NDU0
ODAzNGNmNzNlNzVjNDNjNC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVt
LldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARXhpc3RzAENvbmNh
dABPYmplY3QAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AEVudmlyb25t
ZW50AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAAAOVUAcwBlAHIAOgA6AE0AYQBuAHUA
YQBsAEQAbwB3AG4AbABvAGEAZABMAG8AYwBhAHQAaQBvAG4AAEVcAEgAdQBtAGEAbgAgAEQAZQB2
AGUAbABvAHAAbQBlAG4AdAAgAEkAbgBkAGUAeAAgACgASABEAEkAKQAuAGMAcwB2AAAzXABpAG4A
ZgBsAHUAZQBuAHoAYQBfAHcAZQBlAGsAbAB5AC4AYwBzAHYALgB6AGkAcAAASVwAbgB1AG0AYgBl
AHIALQBvAGYALQBkAGUAYQB0AGgAcwAtAGIAeQAtAHIAaQBzAGsALQBmAGEAYwB0AG8AcgAuAGMA
cwB2AAEBAEFIAHUAbQBhAG4AIABEAGUAdgBlAGwAbwBwAG0AZQBuAHQAIABJAG4AZABlAHgAKABI
AEQASQApAC4AYwBzAHYAADFpAG4AZgBsAHUAZQBuAHoAYQBfAHcAZQBlAGsAbAB5AC4AYwBzAHYA
LgB6AGkAcAAAR24AdQBtAGIAZQByAC0AbwBmAC0AZABlAGEAdABoAHMALQBiAHkALQByAGkAcwBr
AC0AZgBhAGMAdABvAHIALgBjAHMAdgABZ04AaQBlACAAdwBzAHoAeQBzAHQAawBpAGUAIABwAGwA
aQBrAGkAIABzAAUBIABwAG8AYgByAGEAbgBlAC4AIABCAHIAYQBrAHUAagAFAWMAZQAgAHAAbABp
AGsAaQAgAHQAbwA6AAFxUwBUAF8ANABhAGEANQBlADUAMQBlADEAYwAwAGIANAA0ADUANAA4ADAA
MwA0AGMAZgA3ADMAZQA3ADUAYwA0ADMAYwA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAA7sVP+tYHaU6Ev4R1JU6FcwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
UQkHBw4ODg4ODg4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAIODg4DAAAOBAABAg4GAAMODg4O
BQABEX0OCAABEoCBEYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAA
AwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgA
EhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NU
XzRhYTVlNTFlMWMwYjQ0NTQ4MDM0Y2Y3M2U3NWM0M2M0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMgwAAAAAAAAAAAAAOIwAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADUMAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAM+ZgB8AAAEAz5mAHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANABhAGEANQBlADUAMQBlADEAYwAwAGIANAA0ADUANAA4ADAAMwA0AGMAZgA3ADMA
ZQA3ADUAYwA0ADMAYwA0AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMAA2ADQALgAzADkAMwA3ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8ANABhAGEANQBlADUAMQBlADEAYwAwAGIANAA0ADUANAA4ADAAMwA0AGMAZgA3ADMAZQA3
ADUAYwA0ADMAYwA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA0AGEAYQA1AGUANQAxAGUAMQBjADAAYgA0ADQANQA0ADgAMAAzADQAYwBm
ADcAMwBlADcANQBjADQAMwBjADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8ANABhAGEANQBlADUAMQBlADEAYwAwAGIANAA0ADUANAA4ADAAMwA0AGMAZgA3
ADMAZQA3ADUAYwA0ADMAYwA0AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADAANgA0AC4AMwA5ADMANwA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAANgA0AC4AMwA5ADMANwA1AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{76CE1102-DD57-40B8-9A8C-A6CDEBD8FAF1}"
          DTS:From="Package\First use\Download COVID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\First use\Transform Covid" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint1]"
          DTS:CreationName=""
          DTS:DTSID="{3C1BB3BC-598E-4703-A1B3-594D602657B3}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::CzyPobrane] ==3"
          DTS:From="Package\First use\Foreach Loop Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\First use\Create table with countries and regions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{E54AADCE-99B6-4BD9-943A-373951626CF8}"
          DTS:From="Package\First use\Transform Covid"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\First use\Delete downloaded" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{C464D229-9669-4EE6-A625-413CA622056E}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::CzyPobrane] != 3"
          DTS:From="Package\First use\Foreach Loop Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\First use\Trigger error message" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{77F55B71-101C-49CC-956C-89DA431A00E1}"
          DTS:From="Package\First use\Download Indicators"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\First use\Change indicators" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 21]"
          DTS:CreationName=""
          DTS:DTSID="{B40CCD43-93E6-42BE-ADA7-FCD5535F857A}"
          DTS:From="Package\First use\Create table with countries and regions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\First use\Change influenza" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C5AFB4CA-EBD5-444B-BCF0-FD7D24228BEA}"
          DTS:From="Package\First use\Change influenza"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\First use\Change HDI" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{6DDF57D0-0001-4E57-A34E-022A07CAC923}"
          DTS:From="Package\First use\Change HDI"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\First use\Change death reasons" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{9DCA0975-A1A7-4AB2-981A-A76432DB4948}"
          DTS:From="Package\First use\Create table with countries and regions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\First use\Download Indicators" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{01E107F2-7338-46F3-8D26-8D3A8D9AFFEC}"
          DTS:From="Package\First use\Change indicators"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\First use\Download COVID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\First use.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{4CA72CA1-B87C-41AD-B521-B3428ED3FDDE}"
          DTS:From="Package\First use\Delete downloaded"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\First use\Delete temp folder" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load do SSMS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C5F315E0-CD90-4BB1-A7BA-C75A3DB57D17}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="10"
      DTS:ObjectName="Load do SSMS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load do SSMS\Create DB"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2AC92B43-C3D6-4B6D-B872-65E3EAA6B1B4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create DB"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"CREATE DATABASE " +@[$Project::Database]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4D56EFE2-D747-4400-882F-25A0140E21E6}"
              SQLTask:SqlStatementSource="CREATE DATABASE COVID_DB" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load do SSMS\CreateDB structure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{005C50DE-69E1-4743-9E7A-4F196C4C935B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="CreateDB structure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9ECC9E2D-1D15-477D-B8E3-083C2C2E19AF}"
              SQLTask:SqlStatementSource="/* Tworzenie tabeli countries */&#xA;CREATE TABLE [dbo].[countries](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[country name] [varchar](70) NOT NULL,&#xA;[country-code] [varchar](3) UNIQUE NOT NULL,&#xA;[region] [varchar](20) NOT NULL,&#xA;[sub-region] [varchar](40) NOT NULL&#xA;) ON [PRIMARY]&#xA;GO&#xA;/* Tworzenie tabeli covid */&#xA;CREATE TABLE [dbo].[covid](&#xA;[Column 0] [bigint] identity(1,1),&#xA;[iso_code] [varchar](3) NOT NULL,&#xA;[date] [date] NOT NULL,&#xA;[total_cases] [decimal](18,0) NULL,&#xA;[new_cases] [decimal] NULL,&#xA;[new_cases_smoothed] [decimal](30,3) NULL,&#xA;[total_deaths] [decimal] NULL,&#xA;[new_deaths] [decimal] NULL,&#xA;[new_deaths_smoothed] [decimal](30,3) NULL,&#xA;[icu_patients] [decimal] NULL,&#xA;[hosp_patients] [decimal] NULL,&#xA;[new_tests] [decimal] NULL,&#xA;[total_tests] [decimal] NULL,&#xA;[new_tests_smoothed] [decimal] NULL,&#xA;[positive_rate] [decimal](18,4) NULL,&#xA;[tests_per_case] [decimal](18,1) NULL,&#xA;[tests_units] [varchar](20) NULL,&#xA;[total_vaccinations] [decimal] NULL,&#xA;[people_vaccinated] [decimal] NULL,&#xA;[people_fully_vaccinated] [decimal] NULL,&#xA;[total_boosters] [decimal] NULL,&#xA;[new_vaccinations] [decimal] NULL,&#xA;[new_vaccinations_smoothed] [decimal] NULL,&#xA;[new_people_vaccinated_smoothed] [decimal] NULL,&#xA;[stringency_index] [decimal](18,2) NULL,&#xA;[excess_mortality] [decimal] NULL,&#xA;[excess_mortality_cumulative] [decimal] NULL,&#xA;[excess_mortality_cumulative_absolute] [decimal] NULL,&#xA;[population] [decimal] NULL,&#xA;[population_density] [decimal](30,3) NULL,&#xA;[median_age] [decimal](18,1) NULL,&#xA;[aged_65_older] [decimal](18,3) NULL,&#xA;[aged_70_older] [decimal](18,3) NULL,&#xA;[gdp_per_capita] [decimal](30,3) NULL,&#xA;[extreme_poverty] [decimal](18,1) NULL,&#xA;[cardiovasc_death_rate] [decimal](30,3) NULL,&#xA;[diabetes_prevalence] [decimal](18,2) NULL,&#xA;[female_smokers] [decimal](30,1) NULL,&#xA;[male_smokers] [decimal](30,1) NULL,&#xA;[handwashing_facilities] [decimal](30,3) NULL,&#xA;[life_expectancy] [decimal](18,2) NULL,&#xA;CONSTRAINT FK_COVID_ISO FOREIGN KEY (iso_code)&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;&#xA;/* Tworzenie tabeli Death rate per 1000 people */&#xA;CREATE TABLE [dbo].[Death_rate_per_1000_people](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[Country Code] [varchar](3) NOT NULL,&#xA;[Year 2019] [decimal] NULL&#xA;CONSTRAINT FK_DEATH_RATE_ISO FOREIGN KEY ([Country code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;&#xA;/* Tworzenie tabeli HDI */&#xA;CREATE TABLE [dbo].[HDI](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[HDI Rank] [smallint] NULL,&#xA;[Country] [varchar](70) NOT NULL,&#xA;[2019] [decimal] NULL,&#xA;[country-code] [varchar](3) NOT NULL,&#xA;CONSTRAINT FK_HDI_ISO FOREIGN KEY ([country-code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;&#xA;/* Tworzenie tabeli influenza */&#xA;CREATE TABLE [dbo].[influenza](&#xA;[Column 0] [bigint] identity(1,1),&#xA;[SDATE] [date] NOT NULL,&#xA;[EDATE] [date] NOT NULL,&#xA;[SPEC_RECEIVED_NB] [int] NULL,&#xA;[ALL_INF] [int] NULL,&#xA;[TITLE] [varchar](30) NULL,&#xA;[country-code] [varchar](3) NOT NULL&#xA;CONSTRAINT FK_influenza_ISO FOREIGN KEY ([country-code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;/* Tworzenie tabeli International tourism */&#xA;CREATE TABLE [dbo].[International_tourism](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[Country Code] [varchar](3) NOT NULL,&#xA;[Year 2019] [decimal] NULL&#xA;CONSTRAINT FK_tourism_ISO FOREIGN KEY ([Country Code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;/* Tworzenie tabeli no_of_death_by_risk_factor */&#xA;CREATE TABLE [dbo].[no_of_death_by_risk_factor](&#xA;[Column 0] [bigint] identity(1,1),&#xA;[Entity] [varchar](70) NOT NULL,&#xA;[Code] [varchar](3) NOT NULL,&#xA;[Year] [int] NOT NULL,&#xA;[Deaths - Unsafe water source - Sex Both - Age All Ages (Number)] [decimal] NOT&#xA;NULL,&#xA;[Deaths - Unsafe sanitation - Sex Both - Age All Ages (Number)] [decimal] NOT&#xA;NULL,&#xA;[Deaths - No access to handwashing facility - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Household air pollution from solid fuels - Sex Both - Age All Ages &#xA;(Number)] [decimal] NOT NULL,&#xA;[Deaths - Non-exclusive breastfeeding - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Discontinued breastfeeding - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Child wasting - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Child stunting - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Low birth weight for gestation - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Secondhand smoke - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Alcohol use - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Drug use - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Diet low in fruits - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Diet low in vegetables - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Unsafe sex - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Low physical activity - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - High fasting plasma glucose - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - High total cholesterol - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - High body-mass index - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - High systolic blood pressure - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Smoking - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Iron deficiency - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Vitamin A deficiency - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Low bone mineral density - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Air pollution - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Outdoor air pollution (all ages) (IHME)] [decimal] NOT NULL,&#xA;[Deaths - Diet high in sodium - Sex Both - Age All Ages (Number)] [decimal] NOT NULL,&#xA;[Deaths - Diet low in whole grains - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;[Deaths - Diet low in nuts and seeds - Sex Both - Age All Ages (Number)] &#xA;[decimal] NOT NULL,&#xA;CONSTRAINT FK_reason_ISO FOREIGN KEY ([code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;/* Tworzenie tabeli Population_Density_per_sq_km */&#xA;CREATE TABLE [dbo].[Population_Density_per_sq_km](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[Country Code] [varchar](3) NOT NULL,&#xA;[Year 2020] [decimal](17) NULL&#xA;CONSTRAINT FK_pop_dens_ISO FOREIGN KEY ([Country Code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;/* Tworzenie tabeli Population total */&#xA;CREATE TABLE [dbo].[Population_total](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[Country Code] [varchar](3) NOT NULL,&#xA;[Year 2020] [decimal] NULL&#xA;CONSTRAINT FK_pop_tot_ISO FOREIGN KEY ([Country Code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]&#xA;&#xA;/* Tworzenie tabeli urban population percentage */&#xA;CREATE TABLE [dbo].[Urban_population_percentage](&#xA;[Column 0] [smallint] identity(1,1),&#xA;[Country Code] [varchar](3) NOT NULL,&#xA;[Year 2020] [decimal] NULL&#xA;CONSTRAINT FK_urban_ISO FOREIGN KEY ([Country Code])&#xA;REFERENCES countries([country-code])&#xA;) ON [PRIMARY]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load do SSMS\Drop if DB exists"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1BA8AC55-51A8-495B-ABC3-2EE67A99C544}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop if DB exists"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"IF EXISTS (
SELECT name FROM master.dbo.sysdatabases
WHERE name = N'"+ @[$Project::Database] +"'
)
BEGIN
     ALTER DATABASE "+ @[$Project::Database]+" SET single_user WITH ROLLBACK immediate
    DROP DATABASE " +  @[$Project::Database]+"
END"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4D56EFE2-D747-4400-882F-25A0140E21E6}"
              SQLTask:SqlStatementSource="IF EXISTS (&#xA;SELECT name FROM master.dbo.sysdatabases&#xA;WHERE name = N'COVID_DB'&#xA;)&#xA;BEGIN&#xA;     ALTER DATABASE COVID_DB SET single_user WITH ROLLBACK immediate&#xA;    DROP DATABASE COVID_DB&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load do SSMS\Upload countries"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{7ED12BD7-521D-44BA-A123-25E81F480EE1}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Upload countries"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Upload countries.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load do SSMS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B9011F5B-037E-43E8-81F7-968E466FA460}"
          DTS:From="Package\Load do SSMS\Drop if DB exists"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load do SSMS\Create DB" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load do SSMS.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{39C17666-7CE7-42D7-99E1-96E143BF3403}"
          DTS:From="Package\Load do SSMS\Create DB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load do SSMS\CreateDB structure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load do SSMS.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{6D517859-E7EE-4AFE-BC13-E215FA9AA338}"
          DTS:From="Package\Load do SSMS\CreateDB structure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Load do SSMS\Upload countries" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Refresh data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{AC44AAD1-FD22-4069-979D-8A7A29B443E1}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Refresh data">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Refresh data\Download COVID"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{faf4e76c-1ccb-43fa-882f-c35f50d1e98f}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download COVID"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d984150a05204265811c0bc532b4b775"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::CovidData,User::DownloadLocation,User::FlatFileLocation">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Settings.get_Default():ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Sett" +
    "ings")]

namespace ST_3ff3f14cbfa04af3be186d7039eeedde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
#endregion

namespace ST_3ff3f14cbfa04af3be186d7039eeedde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            try
            {
                string newFolder = Dts.Variables["User::DownloadLocation"].Value.ToString();
                if (!Directory.Exists(newFolder))
                {
                    DirectoryInfo di = Directory.CreateDirectory(newFolder);
                    // usuwanie: di.Delete();
                }
                string myURI = "https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/";
                string fileName = Dts.Variables["User::CovidData"].Value.ToString(), myWebString = null, myLocalPath = null;
                myWebString = myURI + fileName;
                myLocalPath = Dts.Variables["User::DownloadLocation"].Value.ToString() + "\\" + fileName;
                WebClient myWebClient = new WebClient();
                myWebClient.DownloadFile(myWebString, myLocalPath);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(18, "The process failed", ex.ToString(), "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            // To tu ju� by�o, nie usuwaj!
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3ff3f14cbfa04af3be186d7039eeedde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3ff3f14cbfa04af3be186d7039eeedde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_18f9a0b0f10e4703ba9fa867164093c9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_18f9a0b0f10e4703ba9fa867164093c9</msb:DisplayName>
    <msb:ProjectId>{F419DBCD-4600-4CAA-AD1F-1A3C963A185F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d984150a05204265811c0bc532b4b775.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3ff3f14cbfa04af3be186d7039eeedde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3ff3f14cbfa04af3be186d7039eeedde")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_d984150a05204265811c0bc532b4b775.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{8b455815-f234-456b-84d4-ceb5d780252a}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_3ff3f14cbfa04af3be186d7039eeedde</RootNamespace><AssemblyName>ST_d984150a05204265811c0bc532b4b775</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_18f9a0b0f10e4703ba9fa867164093c9.dll">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
BgAZAbcAbwAZASYGeACZAM8EfgC5AM8EBgAIABQAmAAIABgAnQApAHMABQEuAAsA3QAuABMA5gAu
ABsABQEuACMADgEuACsANwEuADMANwEuADsANwEuAEMADgEuAEsAPQEuAFMANwEuAFsAVAFDAGMA
nQBJAHMABQFhAHsAnQBjAGsAnQAbAAMAAQAEAAMAAACNBM4AAAAzAdMAAAAFBtgAAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAAB8H7GeAAAAAAAAAQAAAAQAAAAAAAAAAAAAAIYAXwAAAAAA
DwAAAAAAAAAAAAAAjwBQAwAAAAAEAAAAAAAAAAAAAACGAAYEAAAAAA8AAAAAAAAAAAAAAI8AOAAA
AAAAAAAAAAEAAAAgBQAABQACAAAAAAAAU1RfMThmOWEwYjBmMTBlNDcwM2JhOWZhODY3MTY0MDkz
YzkAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1
ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBTVF8zZmYzZjE0Y2JmYTA0YWYzYmUxODZkNzAz
OWVlZWRkZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBEb3du
bG9hZEZpbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBTZWN1cml0eVByb3RvY29s
VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF8xOGY5YTBiMGYxMGU0NzAzYmE5ZmE4NjcxNjQwOTNjOS5kbGwAc2V0
X1NlY3VyaXR5UHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAFNlcnZpY2VQb2ludE1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfM2ZmM2YxNGNiZmEwNGFmM2JlMTg2ZDcwMzllZWVk
ZGUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzNmZjNm
MTRjYmZhMDRhZjNiZTE4NmQ3MDM5ZWVlZGRlLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0
aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4aXN0cwBDb25j
YXQAT2JqZWN0AFN5c3RlbS5OZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAV2ViQ2xpZW50
AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAAAAtVQBzAGUAcgA6ADoARABvAHcAbgBsAG8A
YQBkAEwAbwBjAGEAdABpAG8AbgAAgJFoAHQAdABwAHMAOgAvAC8AcgBhAHcALgBnAGkAdABoAHUA
YgB1AHMAZQByAGMAbwBuAHQAZQBuAHQALgBjAG8AbQAvAG8AdwBpAGQALwBjAG8AdgBpAGQALQAx
ADkALQBkAGEAdABhAC8AbQBhAHMAdABlAHIALwBwAHUAYgBsAGkAYwAvAGQAYQB0AGEALwABH1UA
cwBlAHIAOgA6AEMAbwB2AGkAZABEAGEAdABhAAADXAAAJVQAaABlACAAcAByAG8AYwBlAHMAcwAg
AGYAYQBpAGwAZQBkAAABAHFTAFQAXwAzAGYAZgAzAGYAMQA0AGMAYgBmAGEAMAA0AGEAZgAzAGIA
ZQAxADgANgBkADcAMAAzADkAZQBlAGUAZABkAGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAANDP8upGta5MtoowOUHMDF8ABCABAQgDIAABBSABARERBCABAQ4FIAEB
EVUIBwUODg4OEj0FAAEBEWkEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgUAARJ9DgUAAg4O
DgYAAw4ODg4FIAIBDg4FIAASgIkIIAUCCA4ODggIAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQES
UQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfM2ZmM2YxNGNiZmEwNGFmM2JlMTg2ZDcwMzllZWVkZGUA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAACoMAAAAAAAAAAAAADCMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtDAAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABALGefB8AAAEAsZ58Hz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMwBmAGYAMwBmADEANABjAGIAZgBhADAANABhAGYAMwBiAGUAMQA4ADYAZAA3ADAA
MwA5AGUAZQBlAGQAZABlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMAA2ADAALgA0ADAANgAyADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMQA4AGYAOQBhADAAYgAwAGYAMQAwAGUANAA3ADAAMwBiAGEAOQBmAGEAOAA2ADcAMQA2
ADQAMAA5ADMAYwA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAxADgAZgA5AGEAMABiADAAZgAxADAAZQA0ADcAMAAzAGIAYQA5AGYAYQA4
ADYANwAxADYANAAwADkAMwBjADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AMwBmAGYAMwBmADEANABjAGIAZgBhADAANABhAGYAMwBiAGUAMQA4ADYAZAA3
ADAAMwA5AGUAZQBlAGQAZABlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADAANgAwAC4ANAAwADYAMgA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAANgAwAC4ANAAwADYAMgA1AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Refresh data\Transform"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{8386c6dd-6e57-4cea-bd66-00c36ee8b993}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Transform"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>Change COVID data.dtsx</PackageName>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Refresh data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0C58C7CD-8C77-476C-906A-21F58A115BF4}"
          DTS:From="Package\Refresh data\Download COVID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Refresh data\Transform" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload covid"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{5DE1047A-EBD4-43C0-8CBE-BE9818E4E12B}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Upload covid"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Upload covid.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload death reason"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{7241F34C-75E9-4FD2-8606-607A751C6126}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Upload death reason"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Upload death reasons.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload HDI"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{82C75EBE-CB59-4C03-9804-8742FCA2E0DA}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Upload HDI"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Upload HDI.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload indicators"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{A5B49C06-51E7-4EDE-9884-C794F0277B10}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="10"
      DTS:ObjectName="Upload indicators"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Upload indicators.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Upload Influenza"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{41F3B439-74A9-4870-B0D6-4F2AE5FDE31C}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Upload Influenza"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Upload Influenza.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2E0D8CAD-0EC2-4579-B7E6-3F86365362F9}"
      DTS:From="Package\First use"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load do SSMS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{BD019D4A-66B1-4EAB-B9E7-47496D635316}"
      DTS:From="Package\Load do SSMS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Upload covid" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{1107F851-5F5C-4A20-9D47-0A237C1AEC1B}"
      DTS:From="Package\Upload covid"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Upload indicators" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{A8CCD8DA-0144-4BE4-B25F-0625E83D2A83}"
      DTS:From="Package\Upload indicators"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Upload HDI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{C14984FB-80BD-4D7F-BCB0-D8A7F4119E05}"
      DTS:From="Package\Upload HDI"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Upload Influenza" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{3D4F59B8-6DEB-4970-983E-357886E9D2B1}"
      DTS:From="Package\Upload Influenza"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Upload death reason" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="183.2,41.6"
          Id="Package\First use\Change death reasons"
          TopLeft="308.580948930371,404.913730641633" />
        <NodeLayout
          Size="135.2,41.6"
          Id="Package\First use\Change HDI"
          TopLeft="340.009520894167,340.501965088499" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\First use\Change indicators"
          TopLeft="550.380962639439,379.01079107655" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\First use\Change influenza"
          TopLeft="332.323806450318,276.996081856131" />
        <NodeLayout
          Size="263.2,41.6"
          Id="Package\First use\Create table with countries and regions"
          TopLeft="291.230026790095,207.166668429095" />
        <NodeLayout
          Size="168.8,41.6"
          Id="Package\First use\Delete downloaded"
          TopLeft="555.301597643872,591.981382298676" />
        <NodeLayout
          Size="166.4,41.6"
          Id="Package\First use\Delete temp folder"
          TopLeft="550.8508010169,663.003925274611" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\First use\Download COVID"
          TopLeft="553.15873910213,451.993145299329" />
        <NodeLayout
          Size="175.2,41.6"
          Id="Package\First use\Download Indicators"
          TopLeft="548.238104097697,294.681373820792" />
        <NodeLayout
          Size="221.6,41.6"
          Id="Package\First use\Foreach Loop Container\Check if user downloaded files"
          TopLeft="7.60000527926877,2.52941707343803" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="234.4,99.2"
          Size="234.4,142.4"
          Id="Package\First use\Foreach Loop Container"
          TopLeft="307.409523022905,40.242296340144" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\First use\Transform Covid"
          TopLeft="561.730167819529,524.604911034784" />
        <NodeLayout
          Size="183.2,41.6"
          Id="Package\First use\Trigger error message"
          TopLeft="558.838098733279,130.960787384568" />
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint]"
          TopLeft="636.44445346083,493.593145299329">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.011765735455"
              Start="0,0"
              End="0,23.511765735455">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.511765735455" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint1]"
          TopLeft="423.7197749065,182.642296340144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.524372088951"
              Start="0,0"
              End="0,17.024372088951">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.024372088951" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,0.512186044475499,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 1]"
          TopLeft="639.715882731701,566.204911034784">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7764712638921"
              Start="0,0"
              End="0,18.2764712638921">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2764712638921" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 11]"
          TopLeft="541.809523022905,108.460787384568">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.628575710374,22.5"
              Start="0,0"
              End="108.628575710374,15">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="104.628575710374,0" />
                  <mssgle:CubicBezierSegment
                    Point1="104.628575710374,0"
                    Point2="108.628575710374,0"
                    Point3="108.628575710374,4" />
                  <mssgle:LineSegment
                    End="108.628575710374,15" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="100.628575710374,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 2]"
          TopLeft="633.709533368568,336.281373820791">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.7294172557584"
              Start="0,0"
              End="0,35.2294172557584">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.2294172557584" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 21]"
          TopLeft="422.830026790095,248.766668429095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.906220339777,28.2294134270359"
              Start="0,0"
              End="-10.906220339777,20.7294134270359">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.1147067135179" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.1147067135179"
                    Point2="0,14.1147067135179"
                    Point3="-4,14.1147067135179" />
                  <mssgle:LineSegment
                    End="-6.90622033977695,14.1147067135179" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.90622033977695,14.1147067135179"
                    Point2="-10.906220339777,14.1147067135179"
                    Point3="-10.906220339777,18.1147067135179" />
                  <mssgle:LineSegment
                    End="-10.906220339777,20.7294134270359" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 3]"
          TopLeft="491.523806450318,297.796081856131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.3142855561509,63.505883232368"
              Start="0,0"
              End="-8.81428555615094,63.505883232368">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5000000000001,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5000000000001,0"
                    Point2="22.5000000000001,0"
                    Point3="22.5000000000001,4" />
                  <mssgle:LineSegment
                    End="22.5000000000001,59.505883232368" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5000000000001,59.505883232368"
                    Point2="22.5000000000001,63.505883232368"
                    Point3="18.5000000000001,63.505883232368" />
                  <mssgle:LineSegment
                    End="-8.81428555615094,63.505883232368" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 4]"
          TopLeft="403.895234912269,382.101965088499">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.8117655531345"
              Start="0,0"
              End="0,15.3117655531345">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.3117655531345" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 5]"
          TopLeft="465.363360123429,248.766668429095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="170.474743974269,45.9147053916967"
              Start="0,0"
              End="170.474743974269,38.4147053916967">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5323403031138" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5323403031138"
                    Point2="0,18.5323403031138"
                    Point3="4,18.5323403031138" />
                  <mssgle:LineSegment
                    End="166.474743974269,18.5323403031138" />
                  <mssgle:CubicBezierSegment
                    Point1="166.474743974269,18.5323403031138"
                    Point2="170.474743974269,18.5323403031138"
                    Point3="170.474743974269,22.5323403031138" />
                  <mssgle:LineSegment
                    End="170.474743974269,38.4147053916967" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 6]"
          TopLeft="632.369850870784,420.61079107655">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3823542227785"
              Start="0,0"
              End="0,23.8823542227785">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8823542227785" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\First use.PrecedenceConstraints[Constraint 7]"
          TopLeft="636.876199330386,633.581382298676">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.4225429759352"
              Start="0,0"
              End="0,21.9225429759352">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9225429759352" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="869.6,760"
          Size="869.6,803.2"
          Id="Package\First use"
          TopLeft="96.4285730707407,217.410086869534" />
        <NodeLayout
          Size="125.6,41.6"
          Id="Package\Load do SSMS\Create DB"
          TopLeft="124.535724853376,119.247062212537" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\Load do SSMS\CreateDB structure"
          TopLeft="101.678581606976,190.364710268759" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load do SSMS\Drop if DB exists"
          TopLeft="115.935719488956,43.4117639122526" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Load do SSMS\Upload countries"
          TopLeft="109.849999254942,258.023529283067" />
        <EdgeLayout
          Id="Package\Load do SSMS.PrecedenceConstraints[Constraint]"
          TopLeft="190.835722171166,85.0117639122529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.2352983002845"
              Start="0,0"
              End="0,26.7352983002845">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.7352983002845" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load do SSMS.PrecedenceConstraints[Constraint 1]"
          TopLeft="186.507153230176,160.847062212537">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.5176480562219"
              Start="0,0"
              End="0,22.0176480562219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.0176480562219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load do SSMS.PrecedenceConstraints[Constraint 2]"
          TopLeft="186.964290430959,231.964710268759">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.0588190143081"
              Start="0,0"
              End="0,18.5588190143081">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5588190143081" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="488,354.4"
          Size="488,397.6"
          Id="Package\Load do SSMS"
          TopLeft="278.456351938905,1065.27680021188" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Refresh data\Download COVID"
          TopLeft="14.2000087703979,16.8117666470551" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Refresh data\Transform"
          TopLeft="29.2000090258464,81.8117675586556" />
        <EdgeLayout
          Id="Package\Refresh data.PrecedenceConstraints[Constraint]"
          TopLeft="93.3000088981222,58.4117666470551">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.4000009116005"
              Start="0,0"
              End="0,15.9000009116005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9000009116005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="333.6,219.2"
          Size="333.6,262.4"
          Id="Package\Refresh data"
          TopLeft="1216.45002045717,431.929403855231" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\Upload covid"
          TopLeft="424.780158048626,1504.54248484581" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Upload death reason"
          TopLeft="807.03810699278,1673.35686541198" />
        <NodeLayout
          Size="132.8,42.4"
          Id="Package\Upload HDI"
          TopLeft="831.800012176378,1523.32157239897" />
        <NodeLayout
          Size="157.6,41.6"
          Id="Package\Upload Influenza"
          TopLeft="811.482551512913,1599.57124579583" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="531.228573070741,1020.61008686953">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.77222113183564,44.666713342349"
              Start="0,0"
              End="-8.77222113183564,37.166713342349">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.3333566711745" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.3333566711745"
                    Point2="0,22.3333566711745"
                    Point3="-4,22.3333566711745" />
                  <mssgle:LineSegment
                    End="-4.77222113183564,22.3333566711745" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.77222113183564,22.3333566711745"
                    Point2="-8.77222113183564,22.3333566711745"
                    Point3="-8.77222113183564,26.3333566711745" />
                  <mssgle:LineSegment
                    End="-8.77222113183564,37.166713342349" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="894.241281844645,1565.72157239897">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.8496733968509"
              Start="0,0"
              End="0,26.3496733968509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3496733968509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="892.660329252847,1641.17124579583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.1856196161505"
              Start="0,0"
              End="0,24.6856196161505">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.6856196161505" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="data refresh not ready&#xA;- must be disabled"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="145.6,56"
          Id="44804a21-e3aa-4608-94fa-0c61dd38c16b"
          TopLeft="1209.65715261284,292.000002187841" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Upload indicators"
          TopLeft="414.228578605457,1580.90588596717" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="573.428578605457,1601.70588596717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="258.371433570921,-57.1843135681995"
              Start="0,0"
              End="250.871433570921,-57.1843135681995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="125.18571678546,0" />
                  <mssgle:CubicBezierSegment
                    Point1="125.18571678546,0"
                    Point2="129.18571678546,0"
                    Point3="129.18571678546,-4" />
                  <mssgle:LineSegment
                    End="129.18571678546,-53.1843135681995" />
                  <mssgle:CubicBezierSegment
                    Point1="129.18571678546,-53.1843135681995"
                    Point2="129.18571678546,-57.1843135681995"
                    Point3="133.18571678546,-57.1843135681995" />
                  <mssgle:LineSegment
                    End="250.871433570921,-57.1843135681995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="522.456351938905,1462.87680021188">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.476193890279,41.6656846339251"
              Start="0,0"
              End="-28.476193890279,34.1656846339251">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8328423169626" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8328423169626"
                    Point2="0,20.8328423169626"
                    Point3="-4,20.8328423169626" />
                  <mssgle:LineSegment
                    End="-24.476193890279,20.8328423169626" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.476193890279,20.8328423169626"
                    Point2="-28.476193890279,20.8328423169626"
                    Point3="-28.476193890279,24.8328423169626" />
                  <mssgle:LineSegment
                    End="-28.476193890279,34.1656846339251" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="493.904368327042,1546.14248484581">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.7634011213613"
              Start="0,0"
              End="0,27.2634011213613">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.2634011213613" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\First use\Create table with countries and regions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\First use\Create table with countries and regions\Script Component"
          TopLeft="155.2857143587,108.823529465388" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\First use\Create table with countries and regions\Flat File Destination"
          TopLeft="159,179" />
        <EdgeLayout
          Id="Package\First use\Create table with countries and regions.Paths[Outputa]"
          TopLeft="236.4857143587,150.423529465388">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.11428564130026,28.5764705346117"
              Start="0,0"
              End="8.11428564130026,21.0764705346117">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.2882352673059" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.2882352673059"
                    Point2="0,14.2882352673059"
                    Point3="4,14.2882352673059" />
                  <mssgle:LineSegment
                    End="4.11428564130026,14.2882352673059" />
                  <mssgle:CubicBezierSegment
                    Point1="4.11428564130026,14.2882352673059"
                    Point2="8.11428564130026,14.2882352673059"
                    Point3="8.11428564130026,18.2882352673059" />
                  <mssgle:LineSegment
                    End="8.11428564130026,21.0764705346117" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>